<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unicdata.dao.basedata.CityMapper">
  <resultMap id="BaseResultMap" type="com.unicdata.entity.basedata.City">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="city_name" jdbcType="VARCHAR" property="cityName" />
    <result column="pinyin" jdbcType="VARCHAR" property="pinyin" />
    <result column="order_by" jdbcType="CHAR" property="orderBy" />
    <result column="province_id" jdbcType="INTEGER" property="provinceId" />
    <result column="level" jdbcType="INTEGER" property="level" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, city_name, pinyin, order_by, province_id, level
  </sql>
  <select id="selectByExample" parameterType="com.unicdata.entity.basedata.CityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from city
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from city
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from city
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.unicdata.entity.basedata.City">
    insert into city (id, city_name, pinyin, 
      order_by, province_id, level
      )
    values (#{id,jdbcType=INTEGER}, #{cityName,jdbcType=VARCHAR}, #{pinyin,jdbcType=VARCHAR}, 
      #{orderBy,jdbcType=CHAR}, #{provinceId,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.unicdata.entity.basedata.City" useGeneratedKeys="true" keyProperty="id">
    insert into city
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cityName != null">
        city_name,
      </if>
      <if test="pinyin != null">
        pinyin,
      </if>
      <if test="orderBy != null">
        order_by,
      </if>
      <if test="provinceId != null">
        province_id,
      </if>
      <if test="level != null">
        level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cityName != null">
        #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="pinyin != null">
        #{pinyin,jdbcType=VARCHAR},
      </if>
      <if test="orderBy != null">
        #{orderBy,jdbcType=CHAR},
      </if>
      <if test="provinceId != null">
        #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.unicdata.entity.basedata.City">
    update city
    <set>
      <if test="cityName != null">
        city_name = #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="pinyin != null">
        pinyin = #{pinyin,jdbcType=VARCHAR},
      </if>
      <if test="orderBy != null">
        order_by = #{orderBy,jdbcType=CHAR},
      </if>
      <if test="provinceId != null">
        province_id = #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unicdata.entity.basedata.City">
    update city
    set city_name = #{cityName,jdbcType=VARCHAR},
      pinyin = #{pinyin,jdbcType=VARCHAR},
      order_by = #{orderBy,jdbcType=CHAR},
      province_id = #{provinceId,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>