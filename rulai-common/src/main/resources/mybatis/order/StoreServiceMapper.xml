<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unicdata.dao.order.StoreServiceMapper">
  <resultMap id="BaseResultMap" type="com.unicdata.entity.order.StoreService">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="service_name" jdbcType="VARCHAR" property="serviceName" />
    <result column="service_price" jdbcType="DECIMAL" property="servicePrice" />
    <result column="cost" jdbcType="DECIMAL" property="cost" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, service_name, service_price, cost, create_time, employee_id, store_id
  </sql>
  <select id="selectByExample" parameterType="com.unicdata.entity.order.StoreServiceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from store_service
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from store_service
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from store_service
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.unicdata.entity.order.StoreService">
    insert into store_service (id, service_name, service_price, 
      cost, create_time, employee_id, 
      store_id)
    values (#{id,jdbcType=INTEGER}, #{serviceName,jdbcType=VARCHAR}, #{servicePrice,jdbcType=DECIMAL}, 
      #{cost,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{employeeId,jdbcType=INTEGER}, 
      #{storeId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.unicdata.entity.order.StoreService">
    insert into store_service
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="serviceName != null">
        service_name,
      </if>
      <if test="servicePrice != null">
        service_price,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="serviceName != null">
        #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="servicePrice != null">
        #{servicePrice,jdbcType=DECIMAL},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.unicdata.entity.order.StoreService">
    update store_service
    <set>
      <if test="serviceName != null">
        service_name = #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="servicePrice != null">
        service_price = #{servicePrice,jdbcType=DECIMAL},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeId != null">
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unicdata.entity.order.StoreService">
    update store_service
    set service_name = #{serviceName,jdbcType=VARCHAR},
      service_price = #{servicePrice,jdbcType=DECIMAL},
      cost = #{cost,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      employee_id = #{employeeId,jdbcType=INTEGER},
      store_id = #{storeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>