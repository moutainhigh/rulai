<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unicdata.dao.order.OrderQuotedPriceMapper">
  <resultMap id="BaseResultMap" type="com.unicdata.entity.order.OrderQuotedPrice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="boutique_order_id" jdbcType="INTEGER" property="boutiqueOrderId" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="vehicle_name" jdbcType="VARCHAR" property="vehicleName" />
    <result column="vehicle_price" jdbcType="DECIMAL" property="vehiclePrice" />
    <result column="boutique_price" jdbcType="DECIMAL" property="boutiquePrice" />
    <result column="order_sum_price" jdbcType="DECIMAL" property="orderSumPrice" />
    <result column="pay_first" jdbcType="DECIMAL" property="payFirst" />
    <result column="profit" jdbcType="DECIMAL" property="profit" />
    <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="vehicle_id" jdbcType="INTEGER" property="vehicleId" />
    <result column="cus_id" jdbcType="INTEGER" property="cusId" />
    <result column="quoted_status" jdbcType="TINYINT" property="quotedStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, boutique_order_id, number, vehicle_name, vehicle_price, boutique_price, 
    order_sum_price, pay_first, profit, apply_time, state, employee_id, creat_time, vehicle_id, 
    cus_id, quoted_status
  </sql>
  <select id="selectByExample" parameterType="com.unicdata.entity.order.OrderQuotedPriceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_quoted_price
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_quoted_price
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_quoted_price
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.unicdata.entity.order.OrderQuotedPrice">
    insert into order_quoted_price (id, order_id, boutique_order_id, 
      number, vehicle_name, vehicle_price, 
      boutique_price, order_sum_price, pay_first, 
      profit, apply_time, state, 
      employee_id, creat_time, vehicle_id, 
      cus_id, quoted_status)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{boutiqueOrderId,jdbcType=INTEGER}, 
      #{number,jdbcType=VARCHAR}, #{vehicleName,jdbcType=VARCHAR}, #{vehiclePrice,jdbcType=DECIMAL}, 
      #{boutiquePrice,jdbcType=DECIMAL}, #{orderSumPrice,jdbcType=DECIMAL}, #{payFirst,jdbcType=DECIMAL}, 
      #{profit,jdbcType=DECIMAL}, #{applyTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, 
      #{employeeId,jdbcType=INTEGER}, #{creatTime,jdbcType=TIMESTAMP}, #{vehicleId,jdbcType=INTEGER}, 
      #{cusId,jdbcType=INTEGER}, #{quotedStatus,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.unicdata.entity.order.OrderQuotedPrice">
    insert into order_quoted_price
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="boutiqueOrderId != null">
        boutique_order_id,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="vehicleName != null">
        vehicle_name,
      </if>
      <if test="vehiclePrice != null">
        vehicle_price,
      </if>
      <if test="boutiquePrice != null">
        boutique_price,
      </if>
      <if test="orderSumPrice != null">
        order_sum_price,
      </if>
      <if test="payFirst != null">
        pay_first,
      </if>
      <if test="profit != null">
        profit,
      </if>
      <if test="applyTime != null">
        apply_time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="creatTime != null">
        creat_time,
      </if>
      <if test="vehicleId != null">
        vehicle_id,
      </if>
      <if test="cusId != null">
        cus_id,
      </if>
      <if test="quotedStatus != null">
        quoted_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="boutiqueOrderId != null">
        #{boutiqueOrderId,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="vehicleName != null">
        #{vehicleName,jdbcType=VARCHAR},
      </if>
      <if test="vehiclePrice != null">
        #{vehiclePrice,jdbcType=DECIMAL},
      </if>
      <if test="boutiquePrice != null">
        #{boutiquePrice,jdbcType=DECIMAL},
      </if>
      <if test="orderSumPrice != null">
        #{orderSumPrice,jdbcType=DECIMAL},
      </if>
      <if test="payFirst != null">
        #{payFirst,jdbcType=DECIMAL},
      </if>
      <if test="profit != null">
        #{profit,jdbcType=DECIMAL},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null">
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="vehicleId != null">
        #{vehicleId,jdbcType=INTEGER},
      </if>
      <if test="cusId != null">
        #{cusId,jdbcType=INTEGER},
      </if>
      <if test="quotedStatus != null">
        #{quotedStatus,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.unicdata.entity.order.OrderQuotedPrice">
    update order_quoted_price
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="boutiqueOrderId != null">
        boutique_order_id = #{boutiqueOrderId,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="vehicleName != null">
        vehicle_name = #{vehicleName,jdbcType=VARCHAR},
      </if>
      <if test="vehiclePrice != null">
        vehicle_price = #{vehiclePrice,jdbcType=DECIMAL},
      </if>
      <if test="boutiquePrice != null">
        boutique_price = #{boutiquePrice,jdbcType=DECIMAL},
      </if>
      <if test="orderSumPrice != null">
        order_sum_price = #{orderSumPrice,jdbcType=DECIMAL},
      </if>
      <if test="payFirst != null">
        pay_first = #{payFirst,jdbcType=DECIMAL},
      </if>
      <if test="profit != null">
        profit = #{profit,jdbcType=DECIMAL},
      </if>
      <if test="applyTime != null">
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null">
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null">
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="vehicleId != null">
        vehicle_id = #{vehicleId,jdbcType=INTEGER},
      </if>
      <if test="cusId != null">
        cus_id = #{cusId,jdbcType=INTEGER},
      </if>
      <if test="quotedStatus != null">
        quoted_status = #{quotedStatus,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unicdata.entity.order.OrderQuotedPrice">
    update order_quoted_price
    set order_id = #{orderId,jdbcType=INTEGER},
      boutique_order_id = #{boutiqueOrderId,jdbcType=INTEGER},
      number = #{number,jdbcType=VARCHAR},
      vehicle_name = #{vehicleName,jdbcType=VARCHAR},
      vehicle_price = #{vehiclePrice,jdbcType=DECIMAL},
      boutique_price = #{boutiquePrice,jdbcType=DECIMAL},
      order_sum_price = #{orderSumPrice,jdbcType=DECIMAL},
      pay_first = #{payFirst,jdbcType=DECIMAL},
      profit = #{profit,jdbcType=DECIMAL},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      employee_id = #{employeeId,jdbcType=INTEGER},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      vehicle_id = #{vehicleId,jdbcType=INTEGER},
      cus_id = #{cusId,jdbcType=INTEGER},
      quoted_status = #{quotedStatus,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateQuotedStatus" parameterType="com.unicdata.entity.order.OrderQuotedPrice">
    update order_quoted_price
    set quoted_status = 0
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>