<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unicdata.dao.order.OrderSetMealMapper">
  <resultMap id="BaseResultMap" type="com.unicdata.entity.order.OrderSetMeal">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="set_meal_id" jdbcType="INTEGER" property="setMealId" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="is_gift" jdbcType="TINYINT" property="isGift" />
    <result column="buy_num" jdbcType="INTEGER" property="buyNum" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="sum_meal_price" jdbcType="DECIMAL" property="sumMealPrice" />
    <result column="donation_amount" jdbcType="DECIMAL" property="donationAmount" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="margin" jdbcType="DECIMAL" property="margin" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, set_meal_id, type, remarks, is_gift, buy_num, price, sum_meal_price, 
    donation_amount, total_amount, margin, status, create_time
  </sql>
  <select id="selectByExample" parameterType="com.unicdata.entity.order.OrderSetMealExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_set_meal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_set_meal
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_set_meal
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.unicdata.entity.order.OrderSetMeal">
    insert into order_set_meal (id, order_id, set_meal_id, 
      type, remarks, is_gift, 
      buy_num, price, sum_meal_price, 
      donation_amount, total_amount, margin, 
      status, create_time)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{setMealId,jdbcType=INTEGER}, 
      #{type,jdbcType=TINYINT}, #{remarks,jdbcType=VARCHAR}, #{isGift,jdbcType=TINYINT}, 
      #{buyNum,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, #{sumMealPrice,jdbcType=DECIMAL}, 
      #{donationAmount,jdbcType=DECIMAL}, #{totalAmount,jdbcType=DECIMAL}, #{margin,jdbcType=DECIMAL}, 
      #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.unicdata.entity.order.OrderSetMeal"  keyProperty="id" useGeneratedKeys="true">
    insert into order_set_meal
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="setMealId != null">
        set_meal_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="isGift != null">
        is_gift,
      </if>
      <if test="buyNum != null">
        buy_num,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="sumMealPrice != null">
        sum_meal_price,
      </if>
      <if test="donationAmount != null">
        donation_amount,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="margin != null">
        margin,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="setMealId != null">
        #{setMealId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isGift != null">
        #{isGift,jdbcType=TINYINT},
      </if>
      <if test="buyNum != null">
        #{buyNum,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="sumMealPrice != null">
        #{sumMealPrice,jdbcType=DECIMAL},
      </if>
      <if test="donationAmount != null">
        #{donationAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="margin != null">
        #{margin,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.unicdata.entity.order.OrderSetMeal">
    update order_set_meal
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="setMealId != null">
        set_meal_id = #{setMealId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isGift != null">
        is_gift = #{isGift,jdbcType=TINYINT},
      </if>
      <if test="buyNum != null">
        buy_num = #{buyNum,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="sumMealPrice != null">
        sum_meal_price = #{sumMealPrice,jdbcType=DECIMAL},
      </if>
      <if test="donationAmount != null">
        donation_amount = #{donationAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="margin != null">
        margin = #{margin,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unicdata.entity.order.OrderSetMeal">
    update order_set_meal
    set order_id = #{orderId,jdbcType=INTEGER},
      set_meal_id = #{setMealId,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      remarks = #{remarks,jdbcType=VARCHAR},
      is_gift = #{isGift,jdbcType=TINYINT},
      buy_num = #{buyNum,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      sum_meal_price = #{sumMealPrice,jdbcType=DECIMAL},
      donation_amount = #{donationAmount,jdbcType=DECIMAL},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      margin = #{margin,jdbcType=DECIMAL},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="getOrderSetMeal" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        o.id,o.status,s.type,s.name,IFNULL(o.sum_meal_price,0) saleCount,
        o.donation_amount donationAmount,o.total_amount totalAmount,o.margin
        FROM
        order_set_meal o
        LEFT JOIN set_meal s ON s.id = o.set_meal_id
        WHERE o.order_id = #{orderId}
            AND o.type = #{type}
    </select>
    <select id="getOrderSetMealList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        st.`name`,it.buy_num buyNum,it.price
        FROM
        order_setmeal_item it
        LEFT JOIN order_set_meal me ON me.id = it.order_setmeal_id
        LEFT JOIN set_meal st on it.set_meal_id = st.id
        WHERE
        1 = 1
        <if test="orderId != null">
            AND me.order_id = #{orderId}
        </if>
        <if test="type != null">
            AND it.type = #{type}
        </if>
    </select>
    <select id="selectCouponListByOrderId" parameterType="java.lang.Integer" resultType="java.util.Map">
    SELECT
        se.`name` mealName,
        i.price mealPrice,
        i.buy_num buyNum,
        i.is_gift isGift,
        i.type setmealType
    FROM
        order_setmeal_item i
    LEFT JOIN order_set_meal me ON me.id = i.order_setmeal_id
    LEFT JOIN set_meal se ON i.set_meal_id = se.id
    WHERE
        me.order_id = #{orderId} and i.type = 2
  </select>
    <select id="selectMealListByOrderId" parameterType="java.lang.Integer" resultType="java.util.Map">
        SELECT
        se.`name` mealName,
        i.price mealPrice,
        i.buy_num buyNum,
        i.is_gift isGift,
        i.type setmealType
        FROM
        order_setmeal_item i
        LEFT JOIN order_set_meal me ON me.id = i.order_setmeal_id
        LEFT JOIN set_meal se ON i.set_meal_id = se.id
        WHERE
        me.order_id = #{orderId} and i.type = 1
    </select>
</mapper>