<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unicdata.dao.order.OrderInsuranceMapper">
  <resultMap id="BaseResultMap" type="com.unicdata.entity.order.OrderInsurance">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="insurance_company_id" jdbcType="INTEGER" property="insuranceCompanyId" />
    <result column="insurance_id" jdbcType="INTEGER" property="insuranceId" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="sum_money" jdbcType="DECIMAL" property="sumMoney" />
    <result column="donation_amount" jdbcType="DECIMAL" property="donationAmount" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="margin" jdbcType="DECIMAL" property="margin" />
    <result column="is_renewal" jdbcType="TINYINT" property="isRenewal" />
    <result column="renewal_years" jdbcType="INTEGER" property="renewalYears" />
    <result column="renewal_balance" jdbcType="DECIMAL" property="renewalBalance" />
    <result column="mortgage" jdbcType="DECIMAL" property="mortgage" />
    <result column="is_gift" jdbcType="TINYINT" property="isGift" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="deadline" jdbcType="DATE" property="deadline" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="car_character" jdbcType="INTEGER" property="carCharacter" />
    <result column="insurance_img" jdbcType="VARCHAR" property="insuranceImg" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, insurance_company_id, insurance_id, remarks, sum_money, donation_amount, 
    total_amount, margin, is_renewal, renewal_years, renewal_balance, mortgage, is_gift, 
    create_time, state, deadline, number, car_character, insurance_img
  </sql>
  <select id="selectByExample" parameterType="com.unicdata.entity.order.OrderInsuranceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_insurance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_insurance
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_insurance
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.unicdata.entity.order.OrderInsurance">
    insert into order_insurance (id, order_id, insurance_company_id, 
      insurance_id, remarks, sum_money, 
      donation_amount, total_amount, margin, 
      is_renewal, renewal_years, renewal_balance, 
      mortgage, is_gift, create_time, 
      state, deadline, number, 
      car_character, insurance_img)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{insuranceCompanyId,jdbcType=INTEGER}, 
      #{insuranceId,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, #{sumMoney,jdbcType=DECIMAL}, 
      #{donationAmount,jdbcType=DECIMAL}, #{totalAmount,jdbcType=DECIMAL}, #{margin,jdbcType=DECIMAL}, 
      #{isRenewal,jdbcType=TINYINT}, #{renewalYears,jdbcType=INTEGER}, #{renewalBalance,jdbcType=DECIMAL}, 
      #{mortgage,jdbcType=DECIMAL}, #{isGift,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=INTEGER}, #{deadline,jdbcType=DATE}, #{number,jdbcType=VARCHAR}, 
      #{carCharacter,jdbcType=INTEGER}, #{insuranceImg,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.unicdata.entity.order.OrderInsurance" useGeneratedKeys="true">
    insert into order_insurance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="insuranceCompanyId != null">
        insurance_company_id,
      </if>
      <if test="insuranceId != null">
        insurance_id,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="sumMoney != null">
        sum_money,
      </if>
      <if test="donationAmount != null">
        donation_amount,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="margin != null">
        margin,
      </if>
      <if test="isRenewal != null">
        is_renewal,
      </if>
      <if test="renewalYears != null">
        renewal_years,
      </if>
      <if test="renewalBalance != null">
        renewal_balance,
      </if>
      <if test="mortgage != null">
        mortgage,
      </if>
      <if test="isGift != null">
        is_gift,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="deadline != null">
        deadline,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="carCharacter != null">
        car_character,
      </if>
      <if test="insuranceImg != null">
        insurance_img,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="insuranceCompanyId != null">
        #{insuranceCompanyId,jdbcType=INTEGER},
      </if>
      <if test="insuranceId != null">
        #{insuranceId,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sumMoney != null">
        #{sumMoney,jdbcType=DECIMAL},
      </if>
      <if test="donationAmount != null">
        #{donationAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="margin != null">
        #{margin,jdbcType=DECIMAL},
      </if>
      <if test="isRenewal != null">
        #{isRenewal,jdbcType=TINYINT},
      </if>
      <if test="renewalYears != null">
        #{renewalYears,jdbcType=INTEGER},
      </if>
      <if test="renewalBalance != null">
        #{renewalBalance,jdbcType=DECIMAL},
      </if>
      <if test="mortgage != null">
        #{mortgage,jdbcType=DECIMAL},
      </if>
      <if test="isGift != null">
        #{isGift,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="deadline != null">
        #{deadline,jdbcType=DATE},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="carCharacter != null">
        #{carCharacter,jdbcType=INTEGER},
      </if>
      <if test="insuranceImg != null">
        #{insuranceImg,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.unicdata.entity.order.OrderInsurance">
    update order_insurance
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="insuranceCompanyId != null">
        insurance_company_id = #{insuranceCompanyId,jdbcType=INTEGER},
      </if>
      <if test="insuranceId != null">
        insurance_id = #{insuranceId,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="sumMoney != null">
        sum_money = #{sumMoney,jdbcType=DECIMAL},
      </if>
      <if test="donationAmount != null">
        donation_amount = #{donationAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="margin != null">
        margin = #{margin,jdbcType=DECIMAL},
      </if>
      <if test="isRenewal != null">
        is_renewal = #{isRenewal,jdbcType=TINYINT},
      </if>
      <if test="renewalYears != null">
        renewal_years = #{renewalYears,jdbcType=INTEGER},
      </if>
      <if test="renewalBalance != null">
        renewal_balance = #{renewalBalance,jdbcType=DECIMAL},
      </if>
      <if test="mortgage != null">
        mortgage = #{mortgage,jdbcType=DECIMAL},
      </if>
      <if test="isGift != null">
        is_gift = #{isGift,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="deadline != null">
        deadline = #{deadline,jdbcType=DATE},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="carCharacter != null">
        car_character = #{carCharacter,jdbcType=INTEGER},
      </if>
      <if test="insuranceImg != null">
        insurance_img = #{insuranceImg,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unicdata.entity.order.OrderInsurance">
    update order_insurance
    set order_id = #{orderId,jdbcType=INTEGER},
      insurance_company_id = #{insuranceCompanyId,jdbcType=INTEGER},
      insurance_id = #{insuranceId,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      sum_money = #{sumMoney,jdbcType=DECIMAL},
      donation_amount = #{donationAmount,jdbcType=DECIMAL},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      margin = #{margin,jdbcType=DECIMAL},
      is_renewal = #{isRenewal,jdbcType=TINYINT},
      renewal_years = #{renewalYears,jdbcType=INTEGER},
      renewal_balance = #{renewalBalance,jdbcType=DECIMAL},
      mortgage = #{mortgage,jdbcType=DECIMAL},
      is_gift = #{isGift,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      deadline = #{deadline,jdbcType=DATE},
      number = #{number,jdbcType=VARCHAR},
      car_character = #{carCharacter,jdbcType=INTEGER},
      insurance_img = #{insuranceImg,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByOrderId" parameterType="java.lang.Integer" resultType="java.util.Map">
    SELECT
    oi.id,
    oi.insurance_company_id,
    oi.renewal_years renewalYears,
    oi.is_renewal isRenewal,
    oi.renewal_balance renewalBalance,
    oi.mortgage,
    oi.sum_money,
    oi.total_amount totalAmount,
    ic.insurer_name,
    ic.insurance_name
    FROM
    order_insurance oi
    LEFT JOIN insurance_connection ic ON ic.insurer_id = oi.insurance_company_id 
    AND ic.insurance_id=oi.insurance_id
    WHERE oi.order_id=#{orderId,jdbcType=INTEGER}
  </select>

  <select id="getInsuranceByOrderId" resultType="java.util.Map">
    SELECT
    	ins.id,
    	s.id companyId,
        s.`name` companyName,
        t.id insurerId,
        t.`name` insurerName,
        i.price insuredAmount,
        i.remarks,
        i.level,
        i.parent_id parentId,
        ins.state,
        ins.sum_money sumMoney
    FROM
        order_insurance_item i
    LEFT JOIN order_insurance ins ON ins.id = i.order_insurance_id
    LEFT JOIN insurance_type t ON i.insurance_id = t.id
    LEFT JOIN insurer s ON ins.insurance_company_id = s.id
    WHERE
        ins.order_id = #{orderId} AND i.`level` = 1
  </select>
  
  <select id="getInsuranceListByMap" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT
    	ins.id,
    	s.id companyId,
        s.`name` companyName,
        t.id insurerId,
        t.`name` insurerName,
        i.insured_amount insuredAmount,
        i.remarks,
        i.price,
		i.`level`,
		ins.state,
		ins.total_amount totalAmount,
		ins.donation_amount donationAmount,
        ins.sum_money sumMoney
    FROM
        order_insurance_item i
    LEFT JOIN order_insurance ins ON ins.id = i.order_insurance_id
    LEFT JOIN insurance_type t ON i.insurance_id = t.id
    LEFT JOIN insurer s ON ins.insurance_company_id = s.id
    WHERE
        ins.order_id = #{orderId} 
		<if test="level!=null">
        	AND i.`level` = #{level}
        </if>
  </select>

  <select id="selectListByParams" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT
    oi.id,
    o.order_num orderNum,
    oi.number insuranceNum,
    oi.state insuranceState,
    it.`name` insuranceName,
    oi.deadline,
    oi.sum_money sumMoney,
    o.cus_name cusName,
    o.cus_iphone cusPhone,
    cvc. NAME vehicleName,
    cgi.vin,
    o. STATUS orderState,
    e.login_name employeeName
    FROM
    order_insurance oi
    LEFT JOIN `order` o ON oi.order_id = o.id
    LEFT JOIN employee e ON o.create_id = e.id
    LEFT JOIN car_good_info cgi ON o.car_id = cgi.id
    LEFT JOIN car_vehicle_conf cvc ON cgi.vehicle_id = cvc.id
    LEFT JOIN insurance_type it ON oi.insurance_id = it.id
    WHERE
    o.`status` IN(3,4,9)
    <if test="storeId != null and storeId != ''">
      AND e.store_id = #{storeId}
    </if>
    <if test="insuranceNum != null and insuranceNum != ''">
      AND oi.number LIKE CONCAT('%',#{insuranceNum},'%')
    </if>
    <if test="insuranceState != null">
      AND oi.state LIKE CONCAT('%',#{insuranceState},'%')
    </if>
    <if test="cusName != null and cusName != ''">
      AND o.cus_name LIKE CONCAT('%',#{cusName},'%')
    </if>
    <if test="cusPhone != null and cusPhone != ''">
      AND o.cus_iphone LIKE CONCAT('%',#{cusPhone},'%')
    </if>
    <if test="vin != null and vin != ''">
      AND cgi.vin LIKE CONCAT('%',#{vin},'%')
    </if>
    <if test="insuranceType != null">
      AND oi.insurance_id LIKE CONCAT('%',#{insuranceType},'%')
    </if>
    <if test="orderNum != null and orderNum != ''">
      AND o.order_num LIKE CONCAT('%',#{orderNum},'%')
    </if>
    <if test="orderState != null">
      AND o.status LIKE CONCAT('%',#{orderState},'%')
    </if>
    <if test="beginTime != null and beginTime !=''">
      AND oi.deadline &gt;= #{beginTime}
    </if>
    <if test="endTime != null and endTime !=''">
      AND oi.deadline &lt; #{endTime}
    </if>
    ORDER BY oi.create_time DESC
  </select>

  <select id="getInfoById" parameterType="Integer" resultType="java.util.Map">
    SELECT
    oi.id,
    oi.number insuranceNum,
    oi.insurance_img insuranceImg,
    ic.insurer_name insurerName,
    ic.insurance_name insuranceName,
    oi.car_character carCharacter,
    oi.deadline,
    oi.remarks,
    oi.sum_money sumMoney,
    o.cus_name cusName,
    o.cus_iphone cusPhone,
    cvc. NAME vehicleName,
    cgi.vin
    FROM
    order_insurance oi
    LEFT JOIN `order` o ON oi.order_id = o.id
    LEFT JOIN car_good_info cgi ON o.car_id = cgi.id
    LEFT JOIN car_vehicle_conf cvc ON cgi.vehicle_id = cvc.id
    LEFT JOIN insurance_connection ic ON (oi.insurance_id = ic.insurance_id AND oi.insurance_company_id = ic.insurer_id)
    WHERE
    oi.id = #{id}
  </select>
  <delete id="deleteByOrderInsurance" parameterType="com.unicdata.entity.order.OrderInsurance">
    delete from order_insurance
    where order_id = #{orderId,jdbcType=INTEGER}
    AND insurance_company_id = #{insuranceCompanyId,jdbcType=INTEGER}
  </delete>
  
  <select id="getInsuranceByMap" parameterType="com.unicdata.entity.order.OrderInsurance" resultMap="BaseResultMap">
    SELECT * FROM
    order_insurance 
	WHERE order_id = #{orderId}
		AND insurance_company_id = #{insuranceCompanyId}
  </select>
</mapper>