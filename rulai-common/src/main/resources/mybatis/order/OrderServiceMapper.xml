<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unicdata.dao.order.OrderServiceMapper">
  <resultMap id="BaseResultMap" type="com.unicdata.entity.order.OrderService">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="service_id" jdbcType="INTEGER" property="serviceId" />
    <result column="service_price" jdbcType="DECIMAL" property="servicePrice" />
    <result column="is_gift" jdbcType="TINYINT" property="isGift" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="license_plate_region" jdbcType="VARCHAR" property="licensePlateRegion" />
    <result column="license_plate" jdbcType="VARCHAR" property="licensePlate" />
    <result column="sum_other_price" jdbcType="DECIMAL" property="sumOtherPrice" />
    <result column="donation_amount" jdbcType="DECIMAL" property="donationAmount" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="margin" jdbcType="DECIMAL" property="margin" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, service_id, service_price, is_gift, remark, license_plate_region, license_plate, 
    sum_other_price, donation_amount, total_amount, margin, create_time, status
  </sql>
  <select id="selectByExample" parameterType="com.unicdata.entity.order.OrderServiceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_service
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_service
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_service
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.unicdata.entity.order.OrderService">
    insert into order_service (id, order_id, service_id, 
      service_price, is_gift, remark, 
      license_plate_region, license_plate, sum_other_price, 
      donation_amount, total_amount, margin, 
      create_time, status)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{serviceId,jdbcType=INTEGER}, 
      #{servicePrice,jdbcType=DECIMAL}, #{isGift,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, 
      #{licensePlateRegion,jdbcType=VARCHAR}, #{licensePlate,jdbcType=VARCHAR}, #{sumOtherPrice,jdbcType=DECIMAL}, 
      #{donationAmount,jdbcType=DECIMAL}, #{totalAmount,jdbcType=DECIMAL}, #{margin,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.unicdata.entity.order.OrderService" useGeneratedKeys="true">
    insert into order_service
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="serviceId != null">
        service_id,
      </if>
      <if test="servicePrice != null">
        service_price,
      </if>
      <if test="isGift != null">
        is_gift,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="licensePlateRegion != null">
        license_plate_region,
      </if>
      <if test="licensePlate != null">
        license_plate,
      </if>
      <if test="sumOtherPrice != null">
        sum_other_price,
      </if>
      <if test="donationAmount != null">
        donation_amount,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="margin != null">
        margin,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="serviceId != null">
        #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="servicePrice != null">
        #{servicePrice,jdbcType=DECIMAL},
      </if>
      <if test="isGift != null">
        #{isGift,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="licensePlateRegion != null">
        #{licensePlateRegion,jdbcType=VARCHAR},
      </if>
      <if test="licensePlate != null">
        #{licensePlate,jdbcType=VARCHAR},
      </if>
      <if test="sumOtherPrice != null">
        #{sumOtherPrice,jdbcType=DECIMAL},
      </if>
      <if test="donationAmount != null">
        #{donationAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="margin != null">
        #{margin,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.unicdata.entity.order.OrderService">
    update order_service
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="serviceId != null">
        service_id = #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="servicePrice != null">
        service_price = #{servicePrice,jdbcType=DECIMAL},
      </if>
      <if test="isGift != null">
        is_gift = #{isGift,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="licensePlateRegion != null">
        license_plate_region = #{licensePlateRegion,jdbcType=VARCHAR},
      </if>
      <if test="licensePlate != null">
        license_plate = #{licensePlate,jdbcType=VARCHAR},
      </if>
      <if test="sumOtherPrice != null">
        sum_other_price = #{sumOtherPrice,jdbcType=DECIMAL},
      </if>
      <if test="donationAmount != null">
        donation_amount = #{donationAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="margin != null">
        margin = #{margin,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unicdata.entity.order.OrderService">
    update order_service
    set order_id = #{orderId,jdbcType=INTEGER},
      service_id = #{serviceId,jdbcType=INTEGER},
      service_price = #{servicePrice,jdbcType=DECIMAL},
      is_gift = #{isGift,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      license_plate_region = #{licensePlateRegion,jdbcType=VARCHAR},
      license_plate = #{licensePlate,jdbcType=VARCHAR},
      sum_other_price = #{sumOtherPrice,jdbcType=DECIMAL},
      donation_amount = #{donationAmount,jdbcType=DECIMAL},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      margin = #{margin,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
    
    <select id="selectListByOrderId" parameterType="java.lang.Integer" resultType="java.util.Map">
        SELECT
        	s.id,
            ss.service_name serviceName,
            os.service_price servicePrice,
            os.remark,
            s.donation_amount,
            s.total_amount,
            ss.id serviceId
        FROM
            order_service_item os
        LEFT JOIN order_service s ON os.order_service_id = s.id
        LEFT JOIN store_service ss ON ss.id = os.service_id
        WHERE
            s.order_id = #{orderId}
</select>

    <select id="selectByOrderId" parameterType="java.lang.Integer" resultType="java.util.Map">
        SELECT
        	s.id,
            ss.service_name serviceName,
            ss.service_price servicePrice,
            os.remark
        FROM
            order_service_item os
        LEFT JOIN order_service s ON os.order_service_id = s.id
        LEFT JOIN store_service ss ON ss.id = os.service_id
        WHERE
            s.order_id = #{orderId}
  </select>

    <select id="findByOrderId" parameterType="java.lang.Integer" resultType="java.util.Map">
   select id,order_id,IFNULL(sum_other_price,0) saleCount,donation_amount donationAmount,
      total_amount totalAmount,margin
        from order_service
    WHERE order_id=#{orderId,jdbcType=INTEGER}
  </select>

    <select id="getOrderService" resultType="java.util.Map">
      SELECT
          se.service_name,
          se.service_price
      FROM
          order_service s
      LEFT JOIN store_service se ON s.service_id = se.id
      WHERE
          s.order_id = #{orderId}
  </select>
    <insert id="addOrderOtherService" parameterType="java.util.List">
        insert into order_service (order_id, service_id,
        service_price, remark)
        values
        <foreach collection="list" index="index" item="item" separator=",">
            (#{item.orderId,jdbcType=INTEGER}, #{item.serviceId,jdbcType=INTEGER},
            #{item.servicePrice,jdbcType=DECIMAL}, #{item.remark,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>
    <select id="getServiceByOrderId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
	    select 
	    <include refid="Base_Column_List" />
	    from order_service
	    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
</mapper>