<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unicdata.dao.order.OrderSetMealItemMapper">
  <resultMap id="BaseResultMap" type="com.unicdata.entity.order.OrderSetMealItem">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_setmeal_id" jdbcType="INTEGER" property="orderSetmealId" />
    <result column="set_meal_id" jdbcType="INTEGER" property="setMealId" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="is_gift" jdbcType="TINYINT" property="isGift" />
    <result column="buy_num" jdbcType="INTEGER" property="buyNum" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="cost" jdbcType="DECIMAL" property="cost" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_setmeal_id, set_meal_id, type, remarks, is_gift, buy_num, price,cost, create_time
  </sql>
  <select id="selectByExample" parameterType="com.unicdata.entity.order.OrderSetMealItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_setmeal_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_setmeal_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_setmeal_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.unicdata.entity.order.OrderSetMealItem">
    insert into order_setmeal_item (id, order_setmeal_id, set_meal_id, 
      type, remarks, is_gift, 
      buy_num, price,cost, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{orderSetmealId,jdbcType=INTEGER}, #{setMealId,jdbcType=INTEGER}, 
      #{type,jdbcType=TINYINT}, #{remarks,jdbcType=VARCHAR}, #{isGift,jdbcType=TINYINT}, 
      #{buyNum,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, #{cost,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.unicdata.entity.order.OrderSetMealItem">
    insert into order_setmeal_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderSetmealId != null">
        order_setmeal_id,
      </if>
      <if test="setMealId != null">
        set_meal_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="isGift != null">
        is_gift,
      </if>
      <if test="buyNum != null">
        buy_num,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderSetmealId != null">
        #{orderSetmealId,jdbcType=INTEGER},
      </if>
      <if test="setMealId != null">
        #{setMealId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isGift != null">
        #{isGift,jdbcType=TINYINT},
      </if>
      <if test="buyNum != null">
        #{buyNum,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.unicdata.entity.order.OrderSetMealItem">
    update order_setmeal_item
    <set>
      <if test="orderSetmealId != null">
        order_setmeal_id = #{orderSetmealId,jdbcType=INTEGER},
      </if>
      <if test="setMealId != null">
        set_meal_id = #{setMealId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isGift != null">
        is_gift = #{isGift,jdbcType=TINYINT},
      </if>
      <if test="buyNum != null">
        buy_num = #{buyNum,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="cost != null">
       cost = #{cost,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unicdata.entity.order.OrderSetMealItem">
    update order_setmeal_item
    set order_setmeal_id = #{orderSetmealId,jdbcType=INTEGER},
      set_meal_id = #{setMealId,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      remarks = #{remarks,jdbcType=VARCHAR},
      is_gift = #{isGift,jdbcType=TINYINT},
      buy_num = #{buyNum,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      cost = #{cost,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getOrderSetMealItem" resultType="java.util.Map" parameterType="java.util.Map">
  	SELECT
   	o.id,s.type,o.is_gift isGift,o.buy_num buyNum,o.price,o.cost,s.name,o.set_meal_id setmealId
    FROM
    order_setmeal_item o
    LEFT JOIN set_meal s ON s.id = o.set_meal_id
    WHERE 1=1
    <if test="orderSetmealId != null">
    	AND o.order_setmeal_id  = #{orderSetmealId}
    </if>
    <if test="type != null">
    	AND o.type  = #{type}
    </if>
  </select>
  
  <select id="getOrderSetMealByItemId" resultType="java.util.Map" parameterType="java.lang.Integer">
  	SELECT
   	o.id,s.type,o.is_gift isGift,o.buy_num buyNum,o.price,o.cost,s.name,o.set_meal_id setmealId
    FROM
    order_setmeal_item o
    LEFT JOIN set_meal s ON s.id = o.set_meal_id
    WHERE  o.id  = #{id}
  </select>
</mapper>