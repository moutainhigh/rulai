<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unicdata.dao.order.OrderInsuranceItemMapper">
  <resultMap id="BaseResultMap" type="com.unicdata.entity.order.OrderInsuranceItem">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_insurance_id" jdbcType="INTEGER" property="orderInsuranceId" />
    <result column="insurance_id" jdbcType="INTEGER" property="insuranceId" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="insured_amount" jdbcType="DECIMAL" property="insuredAmount" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="deadline" jdbcType="DATE" property="deadline" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="car_character" jdbcType="INTEGER" property="carCharacter" />
    <result column="insurance_img" jdbcType="VARCHAR" property="insuranceImg" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="vehicle_vessel_tax" jdbcType="DECIMAL" property="vehicleVesselTax" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_insurance_id, insurance_id, remarks, insured_amount, level, parent_id, 
    create_time, status, price, deadline, number, car_character, insurance_img, type, 
    vehicle_vessel_tax
  </sql>
  <select id="selectByExample" parameterType="com.unicdata.entity.order.OrderInsuranceItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_insurance_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_insurance_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_insurance_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.unicdata.entity.order.OrderInsuranceItem">
    insert into order_insurance_item (id, order_insurance_id, insurance_id, 
      remarks, insured_amount, level, 
      parent_id, create_time, status, 
      price, deadline, number, 
      car_character, insurance_img, type, 
      vehicle_vessel_tax)
    values (#{id,jdbcType=INTEGER}, #{orderInsuranceId,jdbcType=INTEGER}, #{insuranceId,jdbcType=INTEGER}, 
      #{remarks,jdbcType=VARCHAR}, #{insuredAmount,jdbcType=DECIMAL}, #{level,jdbcType=INTEGER}, 
      #{parentId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{price,jdbcType=DECIMAL}, #{deadline,jdbcType=DATE}, #{number,jdbcType=VARCHAR}, 
      #{carCharacter,jdbcType=INTEGER}, #{insuranceImg,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{vehicleVesselTax,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.unicdata.entity.order.OrderInsuranceItem">
    insert into order_insurance_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderInsuranceId != null">
        order_insurance_id,
      </if>
      <if test="insuranceId != null">
        insurance_id,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="insuredAmount != null">
        insured_amount,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="deadline != null">
        deadline,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="carCharacter != null">
        car_character,
      </if>
      <if test="insuranceImg != null">
        insurance_img,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="vehicleVesselTax != null">
        vehicle_vessel_tax,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderInsuranceId != null">
        #{orderInsuranceId,jdbcType=INTEGER},
      </if>
      <if test="insuranceId != null">
        #{insuranceId,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="insuredAmount != null">
        #{insuredAmount,jdbcType=DECIMAL},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="deadline != null">
        #{deadline,jdbcType=DATE},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="carCharacter != null">
        #{carCharacter,jdbcType=INTEGER},
      </if>
      <if test="insuranceImg != null">
        #{insuranceImg,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="vehicleVesselTax != null">
        #{vehicleVesselTax,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.unicdata.entity.order.OrderInsuranceItem">
    update order_insurance_item
    <set>
      <if test="orderInsuranceId != null">
        order_insurance_id = #{orderInsuranceId,jdbcType=INTEGER},
      </if>
      <if test="insuranceId != null">
        insurance_id = #{insuranceId,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="insuredAmount != null">
        insured_amount = #{insuredAmount,jdbcType=DECIMAL},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="deadline != null">
        deadline = #{deadline,jdbcType=DATE},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="carCharacter != null">
        car_character = #{carCharacter,jdbcType=INTEGER},
      </if>
      <if test="insuranceImg != null">
        insurance_img = #{insuranceImg,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="vehicleVesselTax != null">
        vehicle_vessel_tax = #{vehicleVesselTax,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unicdata.entity.order.OrderInsuranceItem">
    update order_insurance_item
    set order_insurance_id = #{orderInsuranceId,jdbcType=INTEGER},
      insurance_id = #{insuranceId,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      insured_amount = #{insuredAmount,jdbcType=DECIMAL},
      level = #{level,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      deadline = #{deadline,jdbcType=DATE},
      number = #{number,jdbcType=VARCHAR},
      car_character = #{carCharacter,jdbcType=INTEGER},
      insurance_img = #{insuranceImg,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      vehicle_vessel_tax = #{vehicleVesselTax,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 批量插入 -->
  <insert id="insertBatch" parameterType="java.util.List">
    insert into order_insurance_item (order_insurance_id, insurance_id,
    remarks, insured_amount, level,parent_id,price,status)
    values
    <foreach item="item" index="index" collection="list" separator=",">
      ( #{item.orderInsuranceId,jdbcType=INTEGER}, #{item.insuranceId,jdbcType=INTEGER},
      #{item.remarks,jdbcType=VARCHAR}, #{item.insuredAmount,jdbcType=DECIMAL},
      #{item.level,jdbcType=INTEGER}, #{item.parentId,jdbcType=INTEGER},
      #{item.price,jdbcType=DECIMAL},#{item.status,jdbcType=INTEGER}
      )
    </foreach>
  </insert>

  <update id="updateBatch" parameterType="java.util.List">
    <foreach collection="list" separator=";" item="item">
      update order_insurance_item
      set insured_amount = #{item.insuredAmount,jdbcType=DECIMAL},
      where order_insurance_id = #{item.orderInsuranceId,jdbcType=INTEGER}
      <if test="item.insuranceId!=null">
        AND insurance_id = #{item.insuranceId}
      </if>
      <if test="item.level!=null">
        AND level = #{item.level}
      </if>
      <if test="item.parentId!=null">
        AND parent_id = #{item.parentId}
      </if>
    </foreach>
  </update>
  <delete id="deleteByOrderInsuranceId" parameterType="java.lang.Integer">
    delete from order_insurance_item
    where order_insurance_id = #{orderInsuranceId,jdbcType=INTEGER}
  </delete>
  <select id="selectByMap" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT it.id,it.`name`,it.self_defined selfDefined,it.`level`,
    it.parent_id parentId,oii.order_insurance_id orderInsuranceId,
    IFNULL(oii.price,0) moneyNum,IFNULL(oii.insured_amount,0) insuredAmount,
    IF(oii.id IS NOT NULL,1,0) as choiceStatus,
    itp.price_one priceOne,itp.price_two priceTwo
    FROM insurance_type it
    LEFT JOIN insurance_type_price itp ON itp.insurance_id = it.id AND itp.store_id = #{storeId}
    LEFT JOIN order_insurance_item oii ON oii.insurance_id = it.id
    AND oii.order_insurance_id = #{orderInsuranceId,jdbcType=INTEGER}
    where 1=1
    <if test="level!=null">
      AND it.level = #{level}
    </if>
    <if test="parentId!=null">
      AND it.parent_id = #{parentId}
    </if>
    GROUP BY it.id
  </select>

  <select id="selectListByParams" resultType="java.util.Map" parameterType="java.util.Map">
    SELECT
    oii.id,
    o.order_num orderNum,
    oii.number insuranceNum,
    oii.`status` insuranceState,
    it.`name` insuranceName,
    oii.deadline,
    oii.type,
    IFNULL(oii.price,0) sumMoney,
    o.cus_name cusName,
    o.cus_iphone cusPhone,
    o.use_name useName,
    o.use_iphone usePhone,
    cvc. NAME vehicleName,
    cgi.vin,
    o. STATUS orderState,
    e.full_name employeeName,
    cf.name familyName
    FROM
    order_insurance_item oii
    LEFT JOIN order_insurance oi ON oii.order_insurance_id = oi.id
    LEFT JOIN `order` o ON oi.order_id = o.id
    LEFT JOIN employee e ON o.create_id = e.id
    LEFT JOIN car_good_info cgi ON o.car_id = cgi.id
    LEFT JOIN car_family cf ON cgi.family_id = cf.id
    LEFT JOIN car_vehicle_conf cvc ON cgi.vehicle_id = cvc.id
    LEFT JOIN insurance_type it ON oii.insurance_id = it.id
    WHERE
    o.`status` IN(3,4,9) AND oii.`level` = 1
    <if test="storeId != null and storeId != ''">
      AND e.store_id = #{storeId}
    </if>
    <if test="insuranceNum != null and insuranceNum != ''">
      AND oii.number LIKE CONCAT('%',#{insuranceNum},'%')
    </if>
    <if test="insuranceState != null">
      AND oii.`status` LIKE CONCAT('%',#{insuranceState},'%')
    </if>
    <if test="cusName != null and cusName != ''">
      AND o.cus_name LIKE CONCAT('%',#{cusName},'%')
    </if>
    <if test="cusPhone != null and cusPhone != ''">
      AND o.cus_iphone LIKE CONCAT('%',#{cusPhone},'%')
    </if>
    <if test="vin != null and vin != ''">
      AND cgi.vin LIKE CONCAT('%',#{vin},'%')
    </if>
    <if test="insuranceType != null">
      AND oii.insurance_id LIKE CONCAT('%',#{insuranceType},'%')
    </if>
    <if test="orderNum != null and orderNum != ''">
      AND o.order_num LIKE CONCAT('%',#{orderNum},'%')
    </if>
    <if test="orderState != null">
      AND o.`status` LIKE CONCAT('%',#{orderState},'%')
    </if>
    <if test="beginTime != null and beginTime !=''">
      AND oii.deadline &gt;= #{beginTime}
    </if>
    <if test="endTime != null and endTime !=''">
      AND oii.deadline &lt; #{endTime}
    </if>
    ORDER BY oii.create_time DESC
  </select>

  <select id="getInfoById" resultType="java.util.Map" parameterType="Integer">
    SELECT
    oii.id,
    oii.number insuranceNum,
    oii.insurance_img insuranceImg,
    i.name insurerName,
    it.name insuranceName,
    oii.car_character carCharacter,
    oii.deadline,
    oii.remarks,
    IFNULL(oii.price,0) sumMoney,
    o.use_name useName,
    o.use_iphone usePhone,
    cvc. NAME vehicleName,
    cgi.vin
    FROM
    order_insurance_item oii
    LEFT JOIN order_insurance oi ON oii.order_insurance_id = oi.id
    LEFT JOIN `order` o ON oi.order_id = o.id
    LEFT JOIN car_good_info cgi ON o.car_id = cgi.id
    LEFT JOIN car_vehicle_conf cvc ON cgi.vehicle_id = cvc.id
    LEFT JOIN insurer i ON oi.insurance_company_id = i.id
    LEFT JOIN insurance_type it ON oii.insurance_id = it.id
    WHERE
    oii.id = #{id}
  </select>
</mapper>