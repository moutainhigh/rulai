<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unicdata.dao.push.PushMessageEmployeeMapper">
  <resultMap id="BaseResultMap" type="com.unicdata.entity.push.PushMessageEmployee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="message_id" jdbcType="INTEGER" property="messageId" />
    <result column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <result column="view_state" jdbcType="INTEGER" property="viewState" />
    <result column="view_time" jdbcType="TIMESTAMP" property="viewTime" />
    <result column="url_id" jdbcType="INTEGER" property="urlId" />
    <result column="terminal" jdbcType="INTEGER" property="terminal" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, message_id, employee_id, view_state, view_time, url_id, terminal
  </sql>
  <select id="selectByExample" parameterType="com.unicdata.entity.push.PushMessageEmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from push_message_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from push_message_employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from push_message_employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.unicdata.entity.push.PushMessageEmployee">
    insert into push_message_employee (id, message_id, employee_id, 
      view_state, view_time, url_id, 
      terminal)
    values (#{id,jdbcType=INTEGER}, #{messageId,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, 
      #{viewState,jdbcType=INTEGER}, #{viewTime,jdbcType=TIMESTAMP}, #{urlId,jdbcType=INTEGER}, 
      #{terminal,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.unicdata.entity.push.PushMessageEmployee">
    insert into push_message_employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="messageId != null">
        message_id,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="viewState != null">
        view_state,
      </if>
      <if test="viewTime != null">
        view_time,
      </if>
      <if test="urlId != null">
        url_id,
      </if>
      <if test="terminal != null">
        terminal,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="messageId != null">
        #{messageId,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="viewState != null">
        #{viewState,jdbcType=INTEGER},
      </if>
      <if test="viewTime != null">
        #{viewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="urlId != null">
        #{urlId,jdbcType=INTEGER},
      </if>
      <if test="terminal != null">
        #{terminal,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.unicdata.entity.push.PushMessageEmployee">
    update push_message_employee
    <set>
      <if test="messageId != null">
        message_id = #{messageId,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null">
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="viewState != null">
        view_state = #{viewState,jdbcType=INTEGER},
      </if>
      <if test="viewTime != null">
        view_time = #{viewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="urlId != null">
        url_id = #{urlId,jdbcType=INTEGER},
      </if>
      <if test="terminal != null">
        terminal = #{terminal,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unicdata.entity.push.PushMessageEmployee">
    update push_message_employee
    set message_id = #{messageId,jdbcType=INTEGER},
      employee_id = #{employeeId,jdbcType=INTEGER},
      view_state = #{viewState,jdbcType=INTEGER},
      view_time = #{viewTime,jdbcType=TIMESTAMP},
      url_id = #{urlId,jdbcType=INTEGER},
      terminal = #{terminal,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateViewState" parameterType="com.unicdata.entity.push.PushMessageEmployee">
    update push_message_employee
    set view_state = #{viewState,jdbcType=INTEGER},
      view_time = #{viewTime,jdbcType=TIMESTAMP}
    where message_id = #{messageId,jdbcType=INTEGER}
    AND employee_id = #{employeeId,jdbcType=INTEGER}
    AND view_state = 1
  </update>
</mapper>