<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unicdata.dao.car.CarPurchaseOrderMapper">
  <resultMap id="BaseResultMap" type="com.unicdata.entity.car.CarPurchaseOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="distributor_store_id" jdbcType="INTEGER" property="distributorStoreId" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="brand_id" jdbcType="INTEGER" property="brandId" />
    <result column="operator_id" jdbcType="INTEGER" property="operatorId" />
    <result column="fund_property" jdbcType="INTEGER" property="fundProperty" />
    <result column="source" jdbcType="INTEGER" property="source" />
    <result column="batch_rebate" jdbcType="INTEGER" property="batchRebate" />
    <result column="retail_rebate" jdbcType="INTEGER" property="retailRebate" />
    <result column="engine_name" jdbcType="VARCHAR" property="engineName" />
    <result column="operate_date" jdbcType="TIMESTAMP" property="operateDate" />
    <result column="standard_price" jdbcType="DECIMAL" property="standardPrice" />
    <result column="perchase_price" jdbcType="DECIMAL" property="perchasePrice" />
    <result column="order_status" jdbcType="INTEGER" property="orderStatus" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, distributor_store_id, code, name, brand_id, operator_id, fund_property, source, 
    batch_rebate, retail_rebate, engine_name, operate_date, standard_price, perchase_price, 
    order_status, create_date, update_date, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from car_purchase_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from car_purchase_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.unicdata.entity.car.CarPurchaseOrder">
    insert into car_purchase_order (id, distributor_store_id, code, 
      name, brand_id, operator_id, 
      fund_property, source, batch_rebate, 
      retail_rebate, engine_name, operate_date, 
      standard_price, perchase_price, order_status, 
      create_date, update_date, status
      )
    values (#{id,jdbcType=INTEGER}, #{distributorStoreId,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{brandId,jdbcType=INTEGER}, #{operatorId,jdbcType=INTEGER}, 
      #{fundProperty,jdbcType=INTEGER}, #{source,jdbcType=INTEGER}, #{batchRebate,jdbcType=INTEGER}, 
      #{retailRebate,jdbcType=INTEGER}, #{engineName,jdbcType=VARCHAR}, #{operateDate,jdbcType=TIMESTAMP}, 
      #{standardPrice,jdbcType=DECIMAL}, #{perchasePrice,jdbcType=DECIMAL}, #{orderStatus,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.unicdata.entity.car.CarPurchaseOrder" useGeneratedKeys="true" keyProperty="id">
    insert into car_purchase_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="distributorStoreId != null">
        distributor_store_id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="brandId != null">
        brand_id,
      </if>
      <if test="operatorId != null">
        operator_id,
      </if>
      <if test="fundProperty != null">
        fund_property,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="batchRebate != null">
        batch_rebate,
      </if>
      <if test="retailRebate != null">
        retail_rebate,
      </if>
      <if test="engineName != null">
        engine_name,
      </if>
      <if test="operateDate != null">
        operate_date,
      </if>
      <if test="standardPrice != null">
        standard_price,
      </if>
      <if test="perchasePrice != null">
        perchase_price,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="distributorStoreId != null">
        #{distributorStoreId,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="brandId != null">
        #{brandId,jdbcType=INTEGER},
      </if>
      <if test="operatorId != null">
        #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="fundProperty != null">
        #{fundProperty,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        #{source,jdbcType=INTEGER},
      </if>
      <if test="batchRebate != null">
        #{batchRebate,jdbcType=INTEGER},
      </if>
      <if test="retailRebate != null">
        #{retailRebate,jdbcType=INTEGER},
      </if>
      <if test="engineName != null">
        #{engineName,jdbcType=VARCHAR},
      </if>
      <if test="operateDate != null">
        #{operateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="standardPrice != null">
        #{standardPrice,jdbcType=DECIMAL},
      </if>
      <if test="perchasePrice != null">
        #{perchasePrice,jdbcType=DECIMAL},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.unicdata.entity.car.CarPurchaseOrder">
    update car_purchase_order
    <set>
      <if test="distributorStoreId != null">
        distributor_store_id = #{distributorStoreId,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="brandId != null">
        brand_id = #{brandId,jdbcType=INTEGER},
      </if>
      <if test="operatorId != null">
        operator_id = #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="fundProperty != null">
        fund_property = #{fundProperty,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=INTEGER},
      </if>
      <if test="batchRebate != null">
        batch_rebate = #{batchRebate,jdbcType=INTEGER},
      </if>
      <if test="retailRebate != null">
        retail_rebate = #{retailRebate,jdbcType=INTEGER},
      </if>
      <if test="engineName != null">
        engine_name = #{engineName,jdbcType=VARCHAR},
      </if>
      <if test="operateDate != null">
        operate_date = #{operateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="standardPrice != null">
        standard_price = #{standardPrice,jdbcType=DECIMAL},
      </if>
      <if test="perchasePrice != null">
        perchase_price = #{perchasePrice,jdbcType=DECIMAL},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unicdata.entity.car.CarPurchaseOrder">
    update car_purchase_order
    set distributor_store_id = #{distributorStoreId,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      brand_id = #{brandId,jdbcType=INTEGER},
      operator_id = #{operatorId,jdbcType=INTEGER},
      fund_property = #{fundProperty,jdbcType=INTEGER},
      source = #{source,jdbcType=INTEGER},
      batch_rebate = #{batchRebate,jdbcType=INTEGER},
      retail_rebate = #{retailRebate,jdbcType=INTEGER},
      engine_name = #{engineName,jdbcType=VARCHAR},
      operate_date = #{operateDate,jdbcType=TIMESTAMP},
      standard_price = #{standardPrice,jdbcType=DECIMAL},
      perchase_price = #{perchasePrice,jdbcType=DECIMAL},
      order_status = #{orderStatus,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectListByStore" parameterType="java.lang.Integer" resultType="java.util.Map">
    SELECT
		cpo.id,
		cpo.code,
		cpo.name,
		cpo.brand_id as brandId,
		cpo.fund_property as fundProperty,
		cpo.engine_name as engineName,
		DATE_FORMAT(cpo.operate_date,'%Y-%m-%d %H:%i:%s')operateDate,
		cpo.standard_price as standardPrice,
		cpo.perchase_price as perchasePrice,
		cpo.order_status as orderStatus,
		cpo.source,
		cpo.batch_rebate as batchRebate,
		cpo.retail_rebate as retailRebate,
		e.full_name as fullName,
		cb.factory_name as factoryName
	FROM
		car_purchase_order cpo
	LEFT JOIN employee e ON cpo.operator_id = e.id
	LEFT JOIN car_brand cb on cpo.brand_id = cb.id
    where cpo.distributor_store_id = #{distributorStoreId,jdbcType=INTEGER}
    and cpo.status = 1
	order by cpo.create_date desc
  </select>
   <!-- 采购清单 wp -->
  <select id="carPurchaseList" resultType="java.util.Map" parameterType="java.util.Map">
  	SELECT supplier,id,num,name,code,create_date,order_status FROM
  	(SELECT
		CASE WHEN cpr.fund_property=1 
		THEN cpr.engine_name 
		ELSE (SELECT factory_name FROM car_brand cb WHERE cpr.brand_id=cb.id )
		END as supplier,
		cpr.id,
		(select count(0) from car_good_info  c where c.car_order_id=cpr.id) num,
		cpr.name,
		cpr.code,
		cpr.create_date,
		cpr.order_status
		FROM car_purchase_order cpr
		where 1=1
	<if test="storeId != null">
        AND cpr.distributor_store_id = #{storeId,jdbcType=INTEGER}
    </if>
        AND cpr.order_status IN (1,2)
      UNION
        SELECT
		CASE WHEN cpr.fund_property=1 
		THEN cpr.engine_name 
		ELSE (SELECT factory_name FROM car_brand cb WHERE cpr.brand_id=cb.id )
		END as supplier,
		cpr.id,
		(select count(0) from car_good_info  c where c.car_order_id=cpr.id) num,
		cpr.name,
		cpr.code,
		cpr.create_date,
		cpr.order_status
		FROM car_purchase_order cpr
		where 1=1
	<if test="storeId != null">
        AND cpr.distributor_store_id = #{storeId,jdbcType=INTEGER}
    </if>
        AND cpr.order_status IN (3)
        AND DATE_FORMAT(cpr.create_date,'%Y-%m-%d')=DATE_FORMAT(NOW(),'%Y-%m-%d')
        ) AS A
        ORDER BY A.create_date DESC
  </select>
  <!-- 入库历史 wp-->
  <select id="ruKuHistoryList" parameterType="java.util.Map" resultType="java.util.Map">
  SELECT
	CASE cpr.fund_property WHEN 1 
	THEN cpr.engine_name 
	ELSE (SELECT factory_name FROM car_brand cb WHERE cpr.brand_id=cb.id )
	END as supplier,
	cpr.id,
	cpr.name,
	cpr.code,
	(select count(0) from car_good_info  c where c.car_order_id=cpr.id) num,
	cpr.order_status
	FROM car_purchase_order cpr
	where cpr.order_status=3
	<if test="storeId != null">
        AND cpr.distributor_store_id = #{storeId,jdbcType=INTEGER}
    </if>
     ORDER BY cpr.create_date DESC
  </select>
  <!-- 采购单下的汽车 wp -->
  <select id="selectCarByPurchaseId" resultType="java.util.Map" parameterType="java.util.Map">
  	SELECT 
		c.id,
		c.distributor_store_id,
		c.family_id,
		c.vehicle_id,
		c.brand_id,
		c.vin,
		c.engine_num,
		c.storage_status,
		c.warehouse_id,
		c.storage_id,
		c.car_order_id,
		c.decorations_out_id,
		c.decorations_out_name,
		c.decorations_in_id,
		c.decorations_in_name,
		c.new_boutique_status,
		c.optional_package_status,
		c.in_storage_day,
		cvc.`name` AS chexing_name,
		cf.`name` AS chexi_name,
		cb.`name` AS pingpai_name 
		FROM
		car_good_info c
		LEFT JOIN car_vehicle_conf cvc
		ON cvc.id=c.vehicle_id
		LEFT JOIN car_family cf
		ON cf.id=cvc.family_id
		LEFT JOIN car_brand cb 
		ON cb.id=cf.brand_id
		WHERE c.car_order_id=#{carOrderId}
  </select>
  <!-- 检测记录状态(采购单下的汽车) wp-->
  <select id="checkStatus" parameterType="java.util.Map" resultType="java.util.Map">
  SELECT 
	ccr.check_status 
	FROM 
	car_check_record ccr 
	WHERE ccr.car_id=#{carId}
	AND ccr.check_type=0 
	ORDER BY ccr.create_time 
	DESC limit 1
  </select>
</mapper>