<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unicdata.dao.policy.ArriveBillListMapper">
  <resultMap id="BaseResultMap" type="com.unicdata.entity.policy.ArriveBillList">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="rebate_project_id" jdbcType="INTEGER" property="rebateProjectId" />
    <result column="total_difference" jdbcType="DECIMAL" property="totalDifference" />
    <result column="total_money" jdbcType="DECIMAL" property="totalMoney" />
    <result column="unmatched_num" jdbcType="INTEGER" property="unmatchedNum" />
    <result column="unmatched_money" jdbcType="DECIMAL" property="unmatchedMoney" />
    <result column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, rebate_project_id, total_difference, total_money, unmatched_num, unmatched_money, 
    employee_id, create_date
  </sql>
  <select id="selectByExample" parameterType="com.unicdata.entity.policy.ArriveBillListExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from arrive_bill_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from arrive_bill_list
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from arrive_bill_list
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="com.unicdata.entity.policy.ArriveBillList">
    insert into arrive_bill_list (id, rebate_project_id, total_difference, 
      total_money, unmatched_num, unmatched_money, 
      employee_id, create_date)
    values (#{id,jdbcType=INTEGER}, #{rebateProjectId,jdbcType=INTEGER}, #{totalDifference,jdbcType=DECIMAL}, 
      #{totalMoney,jdbcType=DECIMAL}, #{unmatchedNum,jdbcType=INTEGER}, #{unmatchedMoney,jdbcType=DECIMAL}, 
      #{employeeId,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.unicdata.entity.policy.ArriveBillList">
    insert into arrive_bill_list
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="rebateProjectId != null">
        rebate_project_id,
      </if>
      <if test="totalDifference != null">
        total_difference,
      </if>
      <if test="totalMoney != null">
        total_money,
      </if>
      <if test="unmatchedNum != null">
        unmatched_num,
      </if>
      <if test="unmatchedMoney != null">
        unmatched_money,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="rebateProjectId != null">
        #{rebateProjectId,jdbcType=INTEGER},
      </if>
      <if test="totalDifference != null">
        #{totalDifference,jdbcType=DECIMAL},
      </if>
      <if test="totalMoney != null">
        #{totalMoney,jdbcType=DECIMAL},
      </if>
      <if test="unmatchedNum != null">
        #{unmatchedNum,jdbcType=INTEGER},
      </if>
      <if test="unmatchedMoney != null">
        #{unmatchedMoney,jdbcType=DECIMAL},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.unicdata.entity.policy.ArriveBillList">
    update arrive_bill_list
    <set>
      <if test="rebateProjectId != null">
        rebate_project_id = #{rebateProjectId,jdbcType=INTEGER},
      </if>
      <if test="totalDifference != null">
        total_difference = #{totalDifference,jdbcType=DECIMAL},
      </if>
      <if test="totalMoney != null">
        total_money = #{totalMoney,jdbcType=DECIMAL},
      </if>
      <if test="unmatchedNum != null">
        unmatched_num = #{unmatchedNum,jdbcType=INTEGER},
      </if>
      <if test="unmatchedMoney != null">
        unmatched_money = #{unmatchedMoney,jdbcType=DECIMAL},
      </if>
      <if test="employeeId != null">
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unicdata.entity.policy.ArriveBillList">
    update arrive_bill_list
    set rebate_project_id = #{rebateProjectId,jdbcType=INTEGER},
      total_difference = #{totalDifference,jdbcType=DECIMAL},
      total_money = #{totalMoney,jdbcType=DECIMAL},
      unmatched_num = #{unmatchedNum,jdbcType=INTEGER},
      unmatched_money = #{unmatchedMoney,jdbcType=DECIMAL},
      employee_id = #{employeeId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>