<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unicdata.dao.policy.RebateCarMapper">
  <resultMap id="BaseResultMap" type="com.unicdata.entity.policy.RebateCar">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="policy_id" jdbcType="INTEGER" property="policyId" />
    <result column="rebate_project_id" jdbcType="INTEGER" property="rebateProjectId" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="car_id" jdbcType="INTEGER" property="carId" />
    <result column="vin" jdbcType="VARCHAR" property="vin" />
    <result column="first_estimate_rebate" jdbcType="DECIMAL" property="firstEstimateRebate" />
    <result column="estimate_adjust" jdbcType="DECIMAL" property="estimateAdjust" />
    <result column="plan_extraction" jdbcType="DECIMAL" property="planExtraction" />
    <result column="plan_extraction_adjust" jdbcType="DECIMAL" property="planExtractionAdjust" />
    <result column="is_plan_extraction" jdbcType="TINYINT" property="isPlanExtraction" />
    <result column="plan_extraction_date" jdbcType="TIMESTAMP" property="planExtractionDate" />
    <result column="proofreader_id" jdbcType="INTEGER" property="proofreaderId" />
    <result column="proofreader_money" jdbcType="DECIMAL" property="proofreaderMoney" />
    <result column="proofreader_date" jdbcType="TIMESTAMP" property="proofreaderDate" />
    <result column="arrive_bill_id" jdbcType="INTEGER" property="arriveBillId" />
    <result column="arrive_bill_money" jdbcType="DECIMAL" property="arriveBillMoney" />
    <result column="arrive_bill_date" jdbcType="TIMESTAMP" property="arriveBillDate" />
    <result column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, policy_id, rebate_project_id, store_id, car_id, vin, first_estimate_rebate, estimate_adjust,
    plan_extraction, plan_extraction_adjust, is_plan_extraction, plan_extraction_date,
    proofreader_id, proofreader_money, proofreader_date, arrive_bill_id, arrive_bill_money,
    arrive_bill_date, employee_id, create_date, update_date
  </sql>
  <select id="selectByExample" parameterType="com.unicdata.entity.policy.RebateCarExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rebate_car
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from rebate_car
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rebate_car
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByKeyAndRebate">
     delete from rebate_car where id = #{id} and rebate_project_id = #{rebateId}
  </delete>
  <insert id="insert" parameterType="com.unicdata.entity.policy.RebateCar">
    insert into rebate_car (id, policy_id, rebate_project_id,
    store_id, car_id, vin,
    first_estimate_rebate, estimate_adjust, plan_extraction,
    plan_extraction_adjust, is_plan_extraction,
    plan_extraction_date, proofreader_id, proofreader_money,
    proofreader_date, arrive_bill_id, arrive_bill_money,
    arrive_bill_date, employee_id, create_date,
    update_date)
    values (#{id,jdbcType=INTEGER}, #{policyId,jdbcType=INTEGER}, #{rebateProjectId,jdbcType=INTEGER},
    #{storeId,jdbcType=INTEGER}, #{carId,jdbcType=INTEGER}, #{vin,jdbcType=VARCHAR},
    #{firstEstimateRebate,jdbcType=DECIMAL}, #{estimateAdjust,jdbcType=DECIMAL}, #{planExtraction,jdbcType=DECIMAL},
    #{planExtractionAdjust,jdbcType=DECIMAL}, #{isPlanExtraction,jdbcType=TINYINT},
    #{planExtractionDate,jdbcType=TIMESTAMP}, #{proofreaderId,jdbcType=INTEGER}, #{proofreaderMoney,jdbcType=DECIMAL},
    #{proofreaderDate,jdbcType=TIMESTAMP}, #{arriveBillId,jdbcType=INTEGER}, #{arriveBillMoney,jdbcType=DECIMAL},
    #{arriveBillDate,jdbcType=TIMESTAMP}, #{employeeId,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP},
    #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyProperty="id" useGeneratedKeys="true" parameterType="com.unicdata.entity.policy.RebateCar">
    insert into rebate_car
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="policyId != null">
        policy_id,
      </if>
      <if test="rebateProjectId != null">
        rebate_project_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="carId != null">
        car_id,
      </if>
      <if test="vin != null">
        vin,
      </if>
      <if test="firstEstimateRebate != null">
        first_estimate_rebate,
      </if>
      <if test="estimateAdjust != null">
        estimate_adjust,
      </if>
      <if test="planExtraction != null">
        plan_extraction,
      </if>
      <if test="planExtractionAdjust != null">
        plan_extraction_adjust,
      </if>
      <if test="isPlanExtraction != null">
        is_plan_extraction,
      </if>
      <if test="planExtractionDate != null">
        plan_extraction_date,
      </if>
      <if test="proofreaderId != null">
        proofreader_id,
      </if>
      <if test="proofreaderMoney != null">
        proofreader_money,
      </if>
      <if test="proofreaderDate != null">
        proofreader_date,
      </if>
      <if test="arriveBillId != null">
        arrive_bill_id,
      </if>
      <if test="arriveBillMoney != null">
        arrive_bill_money,
      </if>
      <if test="arriveBillDate != null">
        arrive_bill_date,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="policyId != null">
        #{policyId,jdbcType=INTEGER},
      </if>
      <if test="rebateProjectId != null">
        #{rebateProjectId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="carId != null">
        #{carId,jdbcType=INTEGER},
      </if>
      <if test="vin != null">
        #{vin,jdbcType=VARCHAR},
      </if>
      <if test="firstEstimateRebate != null">
        #{firstEstimateRebate,jdbcType=DECIMAL},
      </if>
      <if test="estimateAdjust != null">
        #{estimateAdjust,jdbcType=DECIMAL},
      </if>
      <if test="planExtraction != null">
        #{planExtraction,jdbcType=DECIMAL},
      </if>
      <if test="planExtractionAdjust != null">
        #{planExtractionAdjust,jdbcType=DECIMAL},
      </if>
      <if test="isPlanExtraction != null">
        #{isPlanExtraction,jdbcType=TINYINT},
      </if>
      <if test="planExtractionDate != null">
        #{planExtractionDate,jdbcType=TIMESTAMP},
      </if>
      <if test="proofreaderId != null">
        #{proofreaderId,jdbcType=INTEGER},
      </if>
      <if test="proofreaderMoney != null">
        #{proofreaderMoney,jdbcType=DECIMAL},
      </if>
      <if test="proofreaderDate != null">
        #{proofreaderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="arriveBillId != null">
        #{arriveBillId,jdbcType=INTEGER},
      </if>
      <if test="arriveBillMoney != null">
        #{arriveBillMoney,jdbcType=DECIMAL},
      </if>
      <if test="arriveBillDate != null">
        #{arriveBillDate,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.unicdata.entity.policy.RebateCar">
    update rebate_car
    <set>
      <if test="policyId != null">
        policy_id = #{policyId,jdbcType=INTEGER},
      </if>
      <if test="rebateProjectId != null">
        rebate_project_id = #{rebateProjectId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="carId != null">
        car_id = #{carId,jdbcType=INTEGER},
      </if>
      <if test="vin != null">
        vin = #{vin,jdbcType=VARCHAR},
      </if>
      <if test="firstEstimateRebate != null">
        first_estimate_rebate = #{firstEstimateRebate,jdbcType=DECIMAL},
      </if>
      <if test="estimateAdjust != null">
        estimate_adjust = #{estimateAdjust,jdbcType=DECIMAL},
      </if>
      <if test="planExtraction != null">
        plan_extraction = #{planExtraction,jdbcType=DECIMAL},
      </if>
      <if test="planExtractionAdjust != null">
        plan_extraction_adjust = #{planExtractionAdjust,jdbcType=DECIMAL},
      </if>
      <if test="isPlanExtraction != null">
        is_plan_extraction = #{isPlanExtraction,jdbcType=TINYINT},
      </if>
      <if test="planExtractionDate != null">
        plan_extraction_date = #{planExtractionDate,jdbcType=TIMESTAMP},
      </if>
      <if test="proofreaderId != null">
        proofreader_id = #{proofreaderId,jdbcType=INTEGER},
      </if>
      <if test="proofreaderMoney != null">
        proofreader_money = #{proofreaderMoney,jdbcType=DECIMAL},
      </if>
      <if test="proofreaderDate != null">
        proofreader_date = #{proofreaderDate,jdbcType=TIMESTAMP},
      </if>
      <if test="arriveBillId != null">
        arrive_bill_id = #{arriveBillId,jdbcType=INTEGER},
      </if>
      <if test="arriveBillMoney != null">
        arrive_bill_money = #{arriveBillMoney,jdbcType=DECIMAL},
      </if>
      <if test="arriveBillDate != null">
        arrive_bill_date = #{arriveBillDate,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeId != null">
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unicdata.entity.policy.RebateCar">
    update rebate_car
    set policy_id = #{policyId,jdbcType=INTEGER},
      rebate_project_id = #{rebateProjectId,jdbcType=INTEGER},
      store_id = #{storeId,jdbcType=INTEGER},
      car_id = #{carId,jdbcType=INTEGER},
      vin = #{vin,jdbcType=VARCHAR},
      first_estimate_rebate = #{firstEstimateRebate,jdbcType=DECIMAL},
      estimate_adjust = #{estimateAdjust,jdbcType=DECIMAL},
      plan_extraction = #{planExtraction,jdbcType=DECIMAL},
      plan_extraction_adjust = #{planExtractionAdjust,jdbcType=DECIMAL},
      is_plan_extraction = #{isPlanExtraction,jdbcType=TINYINT},
      plan_extraction_date = #{planExtractionDate,jdbcType=TIMESTAMP},
      proofreader_id = #{proofreaderId,jdbcType=INTEGER},
      proofreader_money = #{proofreaderMoney,jdbcType=DECIMAL},
      proofreader_date = #{proofreaderDate,jdbcType=TIMESTAMP},
      arrive_bill_id = #{arriveBillId,jdbcType=INTEGER},
      arrive_bill_money = #{arriveBillMoney,jdbcType=DECIMAL},
      arrive_bill_date = #{arriveBillDate,jdbcType=TIMESTAMP},
      employee_id = #{employeeId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectSumProofreaderArriveBillByPolicyId" resultMap="BaseResultMap">
    select sum(arrive_bill_money) arrive_bill_money ,sum(proofreader_money) proofreader_money from rebate_car where policy_id = #{0}
  </select>
  <select id="selectSumProofreaderArriveBillByRebateId" resultMap="BaseResultMap">
    select sum(arrive_bill_money) arrive_bill_money ,sum(proofreader_money) proofreader_money from rebate_car where rebate_project_id = #{0}
  </select>
  <select id="selectSumPlanAndArriveBillProofreader" resultType="com.unicdata.entity.policy.RebateCar" >
     select sum(plan_extraction) planExtraction  ,sum(arrive_bill_money) arriveBillMoney ,sum(proofreader_money) proofreaderMoney from rebate_car where car_id in(${carIds})
  </select>
  <select id="selectSumplanExtractionAdjust" resultType="com.unicdata.entity.policy.RebateCar">
    select sum(plan_extraction_adjust) planExtractionAdjust from rebate_car where car_id in(${carIds})
  </select>
  <select id="selectCarRebate" resultType="map">
     select sum(rc.first_estimate_rebate+estimate_adjust) forecast_profit ,sum(plan_extraction) count_profit from rebate_car rc
     left join rebate_project rp on rc.rebate_project_id = rp.id
     where  rc.car_id = #{0} and rp.status > 0
  </select>
  <select id="selectYearSumPlanAndAdjustByRebateId" resultType="java.util.Map">
     select sum(rc.plan_extraction) planExtractionTotal,sum(rc.plan_extraction_adjust) planExtractionAdjustTotal from rebate_car rc
     left join car_good_info car on rc.car_id = car.id
     where rc.rebate_project_id = #{rebateId} and   (car.first_dms_date between #{yearStartDate} and #{yearEndDate} or car.full_pay_date between #{yearStartDate} and #{yearEndDate})
  </select>
  <select id="selectSumRebateCarDataByCarId" resultType="com.unicdata.entity.policy.RebateCar">
      select sum(first_estimate_rebate) firstEstimateRebate,sum(estimate_adjust) estimateAdjust,sum(plan_extraction) planExtraction,sum(plan_extraction_adjust) planExtractionAdjust,sum(proofreader_money) proofreaderMoney,sum(arrive_bill_money) arriveBillMoney  from rebate_car where car_id = #{carId}
  </select>

</mapper>