<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unicdata.dao.product.InsuranceExtensionMapper">
  <resultMap id="BaseResultMap" type="com.unicdata.entity.product.InsuranceExtension">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="extension_id" jdbcType="INTEGER" property="extensionId" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="items" jdbcType="VARCHAR" property="items" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="operator_id" jdbcType="INTEGER" property="operatorId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="cost" jdbcType="DECIMAL" property="cost" />
    <result column="rebate" jdbcType="DECIMAL" property="rebate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, extension_id, enabled, name, price, state, items, modify_time, create_time, operator_id, 
    remark, store_id, type, cost, rebate
  </sql>
  <select id="selectByExample" parameterType="com.unicdata.entity.product.InsuranceExtensionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from insurance_extension
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from insurance_extension
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from insurance_extension
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.unicdata.entity.product.InsuranceExtension" useGeneratedKeys="true" keyProperty="id">
    insert into insurance_extension (id, extension_id, enabled, 
      name, price, state, 
      items, modify_time, create_time, 
      operator_id, remark, store_id, 
      type, cost, rebate)
    values (#{id,jdbcType=INTEGER}, #{extensionId,jdbcType=INTEGER}, #{enabled,jdbcType=BIT}, 
      #{name,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{state,jdbcType=INTEGER}, 
      #{items,jdbcType=VARCHAR}, #{modifyTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{operatorId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{storeId,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{cost,jdbcType=DECIMAL}, #{rebate,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.unicdata.entity.product.InsuranceExtension" useGeneratedKeys="true" keyProperty="id">
    insert into insurance_extension
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="extensionId != null">
        extension_id,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="items != null">
        items,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="operatorId != null">
        operator_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="rebate != null">
        rebate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="extensionId != null">
        #{extensionId,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="items != null">
        #{items,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorId != null">
        #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=DECIMAL},
      </if>
      <if test="rebate != null">
        #{rebate,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.unicdata.entity.product.InsuranceExtension">
    update insurance_extension
    <set>
      <if test="extensionId != null">
        extension_id = #{extensionId,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="items != null">
        items = #{items,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorId != null">
        operator_id = #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=DECIMAL},
      </if>
      <if test="rebate != null">
        rebate = #{rebate,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unicdata.entity.product.InsuranceExtension">
    update insurance_extension
    set extension_id = #{extensionId,jdbcType=INTEGER},
      enabled = #{enabled,jdbcType=BIT},
      name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      state = #{state,jdbcType=INTEGER},
      items = #{items,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      operator_id = #{operatorId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      cost = #{cost,jdbcType=DECIMAL},
      rebate = #{rebate,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectListByParams" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT
    ie.id,ie.name insuranceName,eic.name extensionName,ie.price,ie.enabled,ie.remark,ie.type,GROUP_CONCAT(cf.name) familyNames
    FROM
    insurance_extension ie
    LEFT JOIN extension_insurance_company eic ON ie.extension_id = eic.id
    LEFT JOIN inusrance_extension_family ief ON ie.id = ief.insurance_extension_id
    LEFT JOIN car_family cf ON ief.family_id = cf.id
    where 1 = 1
    <if test="name != null and name !=''">
      AND ie.name LIKE CONCAT('%',#{name},'%')
    </if>
    <if test="enabled != null">
      AND ie.enabled = #{enabled}
    </if>
    <if test="storeId != null">
      AND ie.store_id = #{storeId}
    </if>
    group by ie.id order by ie.id desc
  </select>

  <update id="updateCostNull" parameterType="java.lang.Integer">
    UPDATE insurance_extension
    SET cost = NULL
    WHERE
    id = #{id}
  </update>

  <select id="selectListByMap" parameterType="java.util.Map" resultType="java.util.Map">
    select id,extension_id extensionId,name,price,cost from
    insurance_extension
    where store_id = #{storeId} AND state = 1 AND enabled = 1
    <if test="familyId != null">
      AND id in (SELECT insurance_extension_id FROM inusrance_extension_family WHERE family_id = #{familyId})
    </if>
  </select>
</mapper>