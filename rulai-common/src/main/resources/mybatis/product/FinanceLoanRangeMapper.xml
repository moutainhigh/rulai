<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unicdata.dao.product.FinanceLoanRangeMapper">
  <resultMap id="BaseResultMap" type="com.unicdata.entity.product.FinanceLoanRange">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="finance_id" jdbcType="INTEGER" property="financeId" />
    <result column="loan_amount_low" jdbcType="DECIMAL" property="loanAmountLow" />
    <result column="loan_amount_hign" jdbcType="DECIMAL" property="loanAmountHign" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, finance_id, loan_amount_low, loan_amount_hign
  </sql>
  <select id="selectByExample" parameterType="com.unicdata.entity.product.FinanceLoanRangeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from finance_loan_range
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from finance_loan_range
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from finance_loan_range
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.unicdata.entity.product.FinanceLoanRange" useGeneratedKeys="true" keyProperty="id">
    insert into finance_loan_range (id, finance_id, loan_amount_low, 
      loan_amount_hign)
    values (#{id,jdbcType=INTEGER}, #{financeId,jdbcType=INTEGER}, #{loanAmountLow,jdbcType=DECIMAL}, 
      #{loanAmountHign,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.unicdata.entity.product.FinanceLoanRange" useGeneratedKeys="true" keyProperty="id">
    insert into finance_loan_range
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="financeId != null">
        finance_id,
      </if>
      <if test="loanAmountLow != null">
        loan_amount_low,
      </if>
      <if test="loanAmountHign != null">
        loan_amount_hign,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="financeId != null">
        #{financeId,jdbcType=INTEGER},
      </if>
      <if test="loanAmountLow != null">
        #{loanAmountLow,jdbcType=DECIMAL},
      </if>
      <if test="loanAmountHign != null">
        #{loanAmountHign,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.unicdata.entity.product.FinanceLoanRange">
    update finance_loan_range
    <set>
      <if test="financeId != null">
        finance_id = #{financeId,jdbcType=INTEGER},
      </if>
      <if test="loanAmountLow != null">
        loan_amount_low = #{loanAmountLow,jdbcType=DECIMAL},
      </if>
      <if test="loanAmountHign != null">
        loan_amount_hign = #{loanAmountHign,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unicdata.entity.product.FinanceLoanRange">
    update finance_loan_range
    set finance_id = #{financeId,jdbcType=INTEGER},
      loan_amount_low = #{loanAmountLow,jdbcType=DECIMAL},
      loan_amount_hign = #{loanAmountHign,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <delete id="deleteByFinanceId" parameterType="java.lang.Integer">
     DELETE FROM finance_loan_range WHERE finance_id = #{financeId,jdbcType=INTEGER}
  </delete>
</mapper>