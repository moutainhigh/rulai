<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unicdata.dao.product.InsuranceConnectionMapper">
  <resultMap id="BaseResultMap" type="com.unicdata.entity.product.InsuranceConnection">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="insurer_id" jdbcType="INTEGER" property="insurerId" />
    <result column="insurance_id" jdbcType="INTEGER" property="insuranceId" />
    <result column="tax_removal_ratio" jdbcType="DECIMAL" property="taxRemovalRatio" />
    <result column="insurance_name" jdbcType="VARCHAR" property="insuranceName" />
    <result column="insurer_name" jdbcType="VARCHAR" property="insurerName" />
    <result column="rebate_ratio" jdbcType="DECIMAL" property="rebateRatio" />
    <result column="cost" jdbcType="DECIMAL" property="cost" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, insurer_id, insurance_id, tax_removal_ratio, insurance_name, insurer_name, rebate_ratio, 
    cost
  </sql>
  <select id="selectByExample" parameterType="com.unicdata.entity.product.InsuranceConnectionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from insurance_connection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from insurance_connection
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from insurance_connection
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.unicdata.entity.product.InsuranceConnection">
    insert into insurance_connection (id, insurer_id, insurance_id, 
      tax_removal_ratio, insurance_name, insurer_name, 
      rebate_ratio, cost)
    values (#{id,jdbcType=INTEGER}, #{insurerId,jdbcType=INTEGER}, #{insuranceId,jdbcType=INTEGER}, 
      #{taxRemovalRatio,jdbcType=DECIMAL}, #{insuranceName,jdbcType=VARCHAR}, #{insurerName,jdbcType=VARCHAR}, 
      #{rebateRatio,jdbcType=DECIMAL}, #{cost,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.unicdata.entity.product.InsuranceConnection">
    insert into insurance_connection
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="insurerId != null">
        insurer_id,
      </if>
      <if test="insuranceId != null">
        insurance_id,
      </if>
      <if test="taxRemovalRatio != null">
        tax_removal_ratio,
      </if>
      <if test="insuranceName != null">
        insurance_name,
      </if>
      <if test="insurerName != null">
        insurer_name,
      </if>
      <if test="rebateRatio != null">
        rebate_ratio,
      </if>
      <if test="cost != null">
        cost,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="insurerId != null">
        #{insurerId,jdbcType=INTEGER},
      </if>
      <if test="insuranceId != null">
        #{insuranceId,jdbcType=INTEGER},
      </if>
      <if test="taxRemovalRatio != null">
        #{taxRemovalRatio,jdbcType=DECIMAL},
      </if>
      <if test="insuranceName != null">
        #{insuranceName,jdbcType=VARCHAR},
      </if>
      <if test="insurerName != null">
        #{insurerName,jdbcType=VARCHAR},
      </if>
      <if test="rebateRatio != null">
        #{rebateRatio,jdbcType=DECIMAL},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.unicdata.entity.product.InsuranceConnection">
    update insurance_connection
    <set>
      <if test="insurerId != null">
        insurer_id = #{insurerId,jdbcType=INTEGER},
      </if>
      <if test="insuranceId != null">
        insurance_id = #{insuranceId,jdbcType=INTEGER},
      </if>
      <if test="taxRemovalRatio != null">
        tax_removal_ratio = #{taxRemovalRatio,jdbcType=DECIMAL},
      </if>
      <if test="insuranceName != null">
        insurance_name = #{insuranceName,jdbcType=VARCHAR},
      </if>
      <if test="insurerName != null">
        insurer_name = #{insurerName,jdbcType=VARCHAR},
      </if>
      <if test="rebateRatio != null">
        rebate_ratio = #{rebateRatio,jdbcType=DECIMAL},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unicdata.entity.product.InsuranceConnection">
    update insurance_connection
    set insurer_id = #{insurerId,jdbcType=INTEGER},
      insurance_id = #{insuranceId,jdbcType=INTEGER},
      tax_removal_ratio = #{taxRemovalRatio,jdbcType=DECIMAL},
      insurance_name = #{insuranceName,jdbcType=VARCHAR},
      insurer_name = #{insurerName,jdbcType=VARCHAR},
      rebate_ratio = #{rebateRatio,jdbcType=DECIMAL},
      cost = #{cost,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <delete id="deleteByInsurerId" parameterType="java.lang.Integer">
    delete from insurance_connection
    where insurer_id = #{insurerId,jdbcType=INTEGER}
  </delete>
  
  <select id="getInsuranceConnectionByMap" resultMap="BaseResultMap" parameterType="java.util.Map">
	select 
    <include refid="Base_Column_List" />
    from insurance_connection
    where insurer_id = #{insurerId,jdbcType=INTEGER}
    and insurance_id = #{insuranceId,jdbcType=INTEGER}
  </select>
</mapper>