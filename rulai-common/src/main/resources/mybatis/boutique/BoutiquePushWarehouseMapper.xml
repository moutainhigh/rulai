<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unicdata.dao.boutique.BoutiquePushWarehouseMapper">
  <resultMap id="BaseResultMap" type="com.unicdata.entity.boutique.BoutiquePushWarehouse">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="operation_time" jdbcType="TIMESTAMP" property="operationTime" />
    <result column="suppiler_id" jdbcType="INTEGER" property="suppilerId" />
    <result column="push_time" jdbcType="TIMESTAMP" property="pushTime" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="type_live" jdbcType="INTEGER" property="typeLive" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, name, operation_time, suppiler_id, push_time, num, note, store_id, type_live
  </sql>
  <select id="selectByExample" parameterType="com.unicdata.entity.boutique.BoutiquePushWarehouseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from boutique_push_warehouse
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from boutique_push_warehouse
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from boutique_push_warehouse
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.unicdata.entity.boutique.BoutiquePushWarehouse">
    insert into boutique_push_warehouse (id, code, name, 
      operation_time, suppiler_id, push_time, 
      num, note, store_id, 
      type_live)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{operationTime,jdbcType=TIMESTAMP}, #{suppilerId,jdbcType=INTEGER}, #{pushTime,jdbcType=TIMESTAMP}, 
      #{num,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR}, #{storeId,jdbcType=INTEGER}, 
      #{typeLive,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.unicdata.entity.boutique.BoutiquePushWarehouse">
    insert into boutique_push_warehouse
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="operationTime != null">
        operation_time,
      </if>
      <if test="suppilerId != null">
        suppiler_id,
      </if>
      <if test="pushTime != null">
        push_time,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="typeLive != null">
        type_live,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="operationTime != null">
        #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="suppilerId != null">
        #{suppilerId,jdbcType=INTEGER},
      </if>
      <if test="pushTime != null">
        #{pushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="typeLive != null">
        #{typeLive,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.unicdata.entity.boutique.BoutiquePushWarehouse">
    update boutique_push_warehouse
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="operationTime != null">
        operation_time = #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="suppilerId != null">
        suppiler_id = #{suppilerId,jdbcType=INTEGER},
      </if>
      <if test="pushTime != null">
        push_time = #{pushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="typeLive != null">
        type_live = #{typeLive,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unicdata.entity.boutique.BoutiquePushWarehouse">
    update boutique_push_warehouse
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      operation_time = #{operationTime,jdbcType=TIMESTAMP},
      suppiler_id = #{suppilerId,jdbcType=INTEGER},
      push_time = #{pushTime,jdbcType=TIMESTAMP},
      num = #{num,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=INTEGER},
      type_live = #{typeLive,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
    <insert id="insertuseGeneratedKeys"  useGeneratedKeys="true" keyProperty="id" parameterType="com.unicdata.entity.boutique.BoutiquePushWarehouse">
    insert into boutique_push_warehouse (id, code, name, 
      operation_time, suppiler_id, push_time, 
      num, note, store_id, 
      type_live)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{operationTime,jdbcType=TIMESTAMP}, #{suppilerId,jdbcType=INTEGER}, #{pushTime,jdbcType=TIMESTAMP}, 
      #{num,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR}, #{storeId,jdbcType=INTEGER}, 
      #{typeLive,jdbcType=INTEGER})
  </insert>
  
  <select id="selectPushWarehouseByCondition" parameterType="com.unicdata.condition.PushWareHouseCondition" resultMap="BaseResultMap">
  	SELECT <include refid="Base_Column_List"/>
  	FROM boutique_push_warehouse
  	WHERE store_id = #{storeId,jdbcType=INTEGER}
  	<if test="code != null and code != ''">
  		AND code = #{code,jdbcType=VARCHAR}
  	</if>
  	<if test="name != null and name != ''">
  		AND name = #{name,jdbcType=VARCHAR}
  	</if>
  	<if test="supplierIds != null and supplierIds != 0">
  		AND  suppiler_id IN
  		<foreach collection="">
  			
  		</foreach>
  		
  	</if>
  	<if test="beginTime != null ">
  		AND push_time &gt;= #{beginTime,jdbcType=TIMESTAMP}
  	</if>
  	<if test="endTime != null">
  		AND push_time &lt;= #{endTime,jdbcType=TIMESTAMP}
  	</if>
  	ORDER BY push_time DESC
  	
  </select>
  
</mapper>