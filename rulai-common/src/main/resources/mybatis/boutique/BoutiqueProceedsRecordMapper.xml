<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unicdata.dao.boutique.BoutiqueProceedsRecordMapper">
  <resultMap id="BaseResultMap" type="com.unicdata.entity.boutique.BoutiqueProceedsRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="operator_id" jdbcType="INTEGER" property="operatorId" />
    <result column="operator_time" jdbcType="TIMESTAMP" property="operatorTime" />
    <result column="pay_type" jdbcType="INTEGER" property="payType" />
    <result column="proceeds_type" jdbcType="INTEGER" property="proceedsType" />
    <result column="proceeds_num" jdbcType="DECIMAL" property="proceedsNum" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, customer_id, operator_id, operator_time, pay_type, proceeds_type, proceeds_num, 
    remark, status, store_id, create_date, update_date
  </sql>
  <select id="selectByExample" parameterType="com.unicdata.entity.boutique.BoutiqueProceedsRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from boutique_proceeds_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from boutique_proceeds_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from boutique_proceeds_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.unicdata.entity.boutique.BoutiqueProceedsRecord">
    insert into boutique_proceeds_record (id, order_id, customer_id, 
      operator_id, operator_time, pay_type, 
      proceeds_type, proceeds_num, remark, 
      status, store_id, create_date, 
      update_date)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, 
      #{operatorId,jdbcType=INTEGER}, #{operatorTime,jdbcType=TIMESTAMP}, #{payType,jdbcType=INTEGER}, 
      #{proceedsType,jdbcType=INTEGER}, #{proceedsNum,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.unicdata.entity.boutique.BoutiqueProceedsRecord">
    insert into boutique_proceeds_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="operatorId != null">
        operator_id,
      </if>
      <if test="operatorTime != null">
        operator_time,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="proceedsType != null">
        proceeds_type,
      </if>
      <if test="proceedsNum != null">
        proceeds_num,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="operatorId != null">
        #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="operatorTime != null">
        #{operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="proceedsType != null">
        #{proceedsType,jdbcType=INTEGER},
      </if>
      <if test="proceedsNum != null">
        #{proceedsNum,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.unicdata.entity.boutique.BoutiqueProceedsRecord">
    update boutique_proceeds_record
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="operatorId != null">
        operator_id = #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="operatorTime != null">
        operator_time = #{operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="proceedsType != null">
        proceeds_type = #{proceedsType,jdbcType=INTEGER},
      </if>
      <if test="proceedsNum != null">
        proceeds_num = #{proceedsNum,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unicdata.entity.boutique.BoutiqueProceedsRecord">
    update boutique_proceeds_record
    set order_id = #{orderId,jdbcType=INTEGER},
      customer_id = #{customerId,jdbcType=INTEGER},
      operator_id = #{operatorId,jdbcType=INTEGER},
      operator_time = #{operatorTime,jdbcType=TIMESTAMP},
      pay_type = #{payType,jdbcType=INTEGER},
      proceeds_type = #{proceedsType,jdbcType=INTEGER},
      proceeds_num = #{proceedsNum,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      store_id = #{storeId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByRetail" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT
    	DATE_FORMAT(bpr.operator_time,'%Y-%m-%d %H:%i:%s') operatorTime,
		bpr.pay_type as payType,
		bpr.proceeds_num as proceedsNum,
		bpr.remark,
		brc.name as customerName,
		e.full_name as operatorName
	FROM
		boutique_proceeds_record bpr
	LEFT JOIN boutique_retail_customer brc on bpr.customer_id = brc.id
	LEFT JOIN employee e on bpr.operator_id = e.id
    where bpr.order_id = #{orderId,jdbcType=INTEGER}
    and bpr.proceeds_type = #{type,jdbcType=INTEGER}
    and bpr.status = 1
    limit 1
  </select>
</mapper>