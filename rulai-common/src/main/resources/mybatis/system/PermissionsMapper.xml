<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unicdata.dao.system.PermissionsMapper">
  <resultMap id="BaseResultMap" type="com.unicdata.entity.system.Permissions">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="permission_name" jdbcType="VARCHAR" property="permissionName" />
    <result column="permission_desc" jdbcType="VARCHAR" property="permissionDesc" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="sort_no" jdbcType="INTEGER" property="sortNo" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="icon_url" jdbcType="VARCHAR" property="iconUrl" />
    <result column="data_status" jdbcType="TINYINT" property="dataStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, permission_name, permission_desc, type, url, parent_id, sort_no, status, create_date, 
    update_date, icon_url, data_status
  </sql>
  <select id="selectByExample" parameterType="com.unicdata.entity.system.PermissionsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from permissions
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from permissions
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from permissions
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.unicdata.entity.system.Permissions">
    insert into permissions (id, permission_name, permission_desc, 
      type, url, parent_id, 
      sort_no, status, create_date, 
      update_date, icon_url, data_status
      )
    values (#{id,jdbcType=INTEGER}, #{permissionName,jdbcType=VARCHAR}, #{permissionDesc,jdbcType=VARCHAR}, 
      #{type,jdbcType=TINYINT}, #{url,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, 
      #{sortNo,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{iconUrl,jdbcType=VARCHAR}, #{dataStatus,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.unicdata.entity.system.Permissions">
    insert into permissions
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="permissionName != null">
        permission_name,
      </if>
      <if test="permissionDesc != null">
        permission_desc,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="sortNo != null">
        sort_no,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="iconUrl != null">
        icon_url,
      </if>
      <if test="dataStatus != null">
        data_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="permissionName != null">
        #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="permissionDesc != null">
        #{permissionDesc,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="sortNo != null">
        #{sortNo,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="iconUrl != null">
        #{iconUrl,jdbcType=VARCHAR},
      </if>
      <if test="dataStatus != null">
        #{dataStatus,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.unicdata.entity.system.Permissions">
    update permissions
    <set>
      <if test="permissionName != null">
        permission_name = #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="permissionDesc != null">
        permission_desc = #{permissionDesc,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="sortNo != null">
        sort_no = #{sortNo,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="iconUrl != null">
        icon_url = #{iconUrl,jdbcType=VARCHAR},
      </if>
      <if test="dataStatus != null">
        data_status = #{dataStatus,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unicdata.entity.system.Permissions">
    update permissions
    set permission_name = #{permissionName,jdbcType=VARCHAR},
      permission_desc = #{permissionDesc,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      url = #{url,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      sort_no = #{sortNo,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      icon_url = #{iconUrl,jdbcType=VARCHAR},
      data_status = #{dataStatus,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="deleteByKey">
    update permissions set data_status = 0 where id = #{0} or parent_id = #{0}
  </update>

  <select id="selectPermissionsByUserId" resultMap="BaseResultMap">
    select p.* from employee e
    left join employee_role er on e.id = er.employee_id
    left join role on er.role_id = role.id
    left join role_permission rp on role.id = rp.role_id
    left join permissions p on rp.permission_id = p.id
    where e.id = #{0}  and p.id is not null  group by p.id
    order by p.parent_id ,p.sort_no asc
  </select>







</mapper>