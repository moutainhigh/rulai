<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unicdata.dao.system.DistributorMapper">
  <resultMap id="BaseResultMap" type="com.unicdata.entity.system.Distributor">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="logo_icon" jdbcType="VARCHAR" property="logoIcon" />
    <result column="addresss" jdbcType="VARCHAR" property="addresss" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="appid" jdbcType="VARCHAR" property="appid" />
    <result column="appsecret" jdbcType="VARCHAR" property="appsecret" />
    <result column="encrypt_strings" jdbcType="VARCHAR" property="encryptStrings" />
    <result column="switch_flag" jdbcType="INTEGER" property="switchFlag" />
    <result column="data_status" jdbcType="TINYINT" property="dataStatus" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, logo_icon, addresss, telephone, appid, appsecret, encrypt_strings, switch_flag, 
    data_status, create_date, update_date
  </sql>
  <select id="selectByExample" parameterType="com.unicdata.entity.system.DistributorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from distributor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from distributor
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByDistributor" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from distributor
  </select>
  <select id="select" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from distributor
    where data_status = 1
    <if test="encryptStrings != null">
      and encrypt_strings = #{encryptStrings,jdbcType=VARCHAR}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from distributor
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.unicdata.entity.system.Distributor">
    insert into distributor (id, name, logo_icon, 
      addresss, telephone, appid, 
      appsecret, encrypt_strings, switch_flag, 
      data_status, create_date, update_date
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{logoIcon,jdbcType=VARCHAR}, 
      #{addresss,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, #{appid,jdbcType=VARCHAR}, 
      #{appsecret,jdbcType=VARCHAR}, #{encryptStrings,jdbcType=VARCHAR}, #{switchFlag,jdbcType=INTEGER}, 
      #{dataStatus,jdbcType=TINYINT}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.unicdata.entity.system.Distributor">
    insert into distributor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="logoIcon != null">
        logo_icon,
      </if>
      <if test="addresss != null">
        addresss,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="appid != null">
        appid,
      </if>
      <if test="appsecret != null">
        appsecret,
      </if>
      <if test="encryptStrings != null">
        encrypt_strings,
      </if>
      <if test="switchFlag != null">
        switch_flag,
      </if>
      <if test="dataStatus != null">
        data_status,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="logoIcon != null">
        #{logoIcon,jdbcType=VARCHAR},
      </if>
      <if test="addresss != null">
        #{addresss,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="appid != null">
        #{appid,jdbcType=VARCHAR},
      </if>
      <if test="appsecret != null">
        #{appsecret,jdbcType=VARCHAR},
      </if>
      <if test="encryptStrings != null">
        #{encryptStrings,jdbcType=VARCHAR},
      </if>
      <if test="switchFlag != null">
        #{switchFlag,jdbcType=INTEGER},
      </if>
      <if test="dataStatus != null">
        #{dataStatus,jdbcType=TINYINT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.unicdata.entity.system.Distributor">
    update distributor
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="logoIcon != null">
        logo_icon = #{logoIcon,jdbcType=VARCHAR},
      </if>
      <if test="addresss != null">
        addresss = #{addresss,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="appid != null">
        appid = #{appid,jdbcType=VARCHAR},
      </if>
      <if test="appsecret != null">
        appsecret = #{appsecret,jdbcType=VARCHAR},
      </if>
      <if test="encryptStrings != null">
        encrypt_strings = #{encryptStrings,jdbcType=VARCHAR},
      </if>
      <if test="switchFlag != null">
        switch_flag = #{switchFlag,jdbcType=INTEGER},
      </if>
      <if test="dataStatus != null">
        data_status = #{dataStatus,jdbcType=TINYINT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unicdata.entity.system.Distributor">
    update distributor
    set name = #{name,jdbcType=VARCHAR},
      logo_icon = #{logoIcon,jdbcType=VARCHAR},
      addresss = #{addresss,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      appid = #{appid,jdbcType=VARCHAR},
      appsecret = #{appsecret,jdbcType=VARCHAR},
      encrypt_strings = #{encryptStrings,jdbcType=VARCHAR},
      switch_flag = #{switchFlag,jdbcType=INTEGER},
      data_status = #{dataStatus,jdbcType=TINYINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>