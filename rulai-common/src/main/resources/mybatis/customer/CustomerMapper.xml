<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unicdata.dao.customer.CustomerMapper">
    <resultMap id="BaseResultMap" type="com.unicdata.entity.customer.Customer">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="passenger_id" jdbcType="INTEGER" property="passengerId"/>
        <result column="category" jdbcType="INTEGER" property="category"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="sex" jdbcType="INTEGER" property="sex"/>
        <result column="number" jdbcType="VARCHAR" property="number"/>
        <result column="owned_car" jdbcType="INTEGER" property="ownedCar"/>
        <result column="license_plate" jdbcType="VARCHAR" property="licensePlate"/>
        <result column="province_id" jdbcType="INTEGER" property="provinceId"/>
        <result column="city_id" jdbcType="INTEGER" property="cityId"/>
        <result column="district_id" jdbcType="INTEGER" property="districtId"/>
        <result column="channel" jdbcType="INTEGER" property="channel"/>
        <result column="level" jdbcType="INTEGER" property="level"/>
        <result column="contact_time" jdbcType="INTEGER" property="contactTime"/>
        <result column="relation_customer" jdbcType="INTEGER" property="relationCustomer"/>
        <result column="cus_info_sources" jdbcType="INTEGER" property="cusInfoSources"/>
        <result column="origin" jdbcType="INTEGER" property="origin"/>
        <result column="intention_family_id" jdbcType="INTEGER" property="intentionFamilyId"/>
        <result column="usage" jdbcType="INTEGER" property="usage"/>
        <result column="user" jdbcType="INTEGER" property="user"/>
        <result column="user_sex" jdbcType="INTEGER" property="userSex"/>
        <result column="attention_point" jdbcType="VARCHAR" property="attentionPoint"/>
        <result column="budget" jdbcType="INTEGER" property="budget"/>
        <result column="expect_buy_time" jdbcType="DATE" property="expectBuyTime"/>
        <result column="buy_type" jdbcType="INTEGER" property="buyType"/>
        <result column="attention_car_one" jdbcType="INTEGER" property="attentionCarOne"/>
        <result column="attention_car_two" jdbcType="INTEGER" property="attentionCarTwo"/>
        <result column="attention_car_three" jdbcType="INTEGER" property="attentionCarThree"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime"/>
        <result column="employee_id" jdbcType="INTEGER" property="employeeId"/>
        <result column="store_id" jdbcType="INTEGER" property="storeId"/>
        <result column="user_status" jdbcType="INTEGER" property="userStatus"/>
        <result column="industry" jdbcType="VARCHAR" property="industry"/>
        <result column="integrity" jdbcType="DOUBLE" property="integrity"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, passenger_id, category, type, name, phone, sex, number, owned_car, license_plate, 
    province_id, city_id, district_id, channel, `level`, contact_time, relation_customer,
    cus_info_sources, origin, intention_family_id, `usage`, `user`, user_sex, attention_point,
    budget, expect_buy_time, buy_type, attention_car_one, attention_car_two, attention_car_three, 
    create_time, modify_time, employee_id, store_id, user_status, industry, integrity
  </sql>
    <select id="selectByExample" parameterType="com.unicdata.entity.customer.CustomerExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from customer
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from customer
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.unicdata.entity.customer.Customer" useGeneratedKeys="true" keyProperty="id">
    insert into customer (id, passenger_id, category, 
      type, name, phone, 
      sex, number, owned_car, 
      license_plate, province_id, city_id, 
      district_id, channel, `level`,
      contact_time, relation_customer, cus_info_sources, 
      origin, intention_family_id, `usage`,
      `user`, user_sex, attention_point,
      budget, expect_buy_time, buy_type, 
      attention_car_one, attention_car_two, attention_car_three, 
      create_time, modify_time, employee_id, 
      store_id, user_status, industry, 
      integrity)
    values (#{id,jdbcType=INTEGER}, #{passengerId,jdbcType=INTEGER}, #{category,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{number,jdbcType=VARCHAR}, #{ownedCar,jdbcType=INTEGER}, 
      #{licensePlate,jdbcType=VARCHAR}, #{provinceId,jdbcType=INTEGER}, #{cityId,jdbcType=INTEGER}, 
      #{districtId,jdbcType=INTEGER}, #{channel,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, 
      #{contactTime,jdbcType=INTEGER}, #{relationCustomer,jdbcType=INTEGER}, #{cusInfoSources,jdbcType=INTEGER}, 
      #{origin,jdbcType=INTEGER}, #{intentionFamilyId,jdbcType=INTEGER}, #{usage,jdbcType=INTEGER}, 
      #{user,jdbcType=INTEGER}, #{userSex,jdbcType=INTEGER}, #{attentionPoint,jdbcType=VARCHAR}, 
      #{budget,jdbcType=INTEGER}, #{expectBuyTime,jdbcType=DATE}, #{buyType,jdbcType=INTEGER}, 
      #{attentionCarOne,jdbcType=INTEGER}, #{attentionCarTwo,jdbcType=INTEGER}, #{attentionCarThree,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{employeeId,jdbcType=INTEGER}, 
      #{storeId,jdbcType=INTEGER}, #{userStatus,jdbcType=INTEGER}, #{industry,jdbcType=VARCHAR}, 
      #{integrity,jdbcType=DOUBLE})
  </insert>
    <insert id="insertSelective" parameterType="com.unicdata.entity.customer.Customer" useGeneratedKeys="true"
            keyProperty="id">
        insert into customer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="passengerId != null">
                passenger_id,
            </if>
            <if test="category != null and category != 0">
                category,
            </if>
            <if test="type != null and type != 0">
                type,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="number != null">
                number,
            </if>
            <if test="ownedCar != null and ownedCar != 0">
                owned_car,
            </if>
            <if test="licensePlate != null and licensePlate !=''">
                license_plate,
            </if>
            <if test="provinceId != null and provinceId != 0">
                province_id,
            </if>
            <if test="cityId != null and cityId != 0">
                city_id,
            </if>
            <if test="districtId != null and districtId != 0">
                district_id,
            </if>
            <if test="channel != null and channel != 0">
                channel,
            </if>
            <if test="level != null and level != 0">
                `level`,
            </if>
            <if test="contactTime != null and contactTime != 0">
                contact_time,
            </if>
            <if test="relationCustomer != null and relationCustomer != 0">
                relation_customer,
            </if>
            <if test="cusInfoSources != null and cusInfoSources != 0">
                cus_info_sources,
            </if>
            <if test="origin != null and origin != 0">
                origin,
            </if>
            <if test="intentionFamilyId != null and intentionFamilyId != 0">
                intention_family_id,
            </if>
            <if test="usage != null and usage != 0">
                `usage`,
            </if>
            <if test="user != null and user != 0">
                `user`,
            </if>
            <if test="userSex != null">
                user_sex,
            </if>
            <if test="attentionPoint != null and attentionPoint != ''">
                attention_point,
            </if>
            <if test="budget != null and budget != 0">
                budget,
            </if>
            <if test="expectBuyTime != null">
                expect_buy_time,
            </if>
            <if test="buyType != null and buyType != 0">
                buy_type,
            </if>
            <if test="attentionCarOne != null and attentionCarOne != 0">
                attention_car_one,
            </if>
            <if test="attentionCarTwo != null and attentionCarTwo != 0">
                attention_car_two,
            </if>
            <if test="attentionCarThree != null and attentionCarThree != 0">
                attention_car_three,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
            <if test="employeeId != null">
                employee_id,
            </if>
            <if test="storeId != null">
                store_id,
            </if>
            <if test="userStatus != null">
                user_status,
            </if>
            <if test="industry != null and industry != ''">
                industry,
            </if>
            <if test="integrity != null">
                integrity,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="passengerId != null">
                #{passengerId,jdbcType=INTEGER},
            </if>
            <if test="category != null and category != 0">
                #{category,jdbcType=INTEGER},
            </if>
            <if test="type != null and type != 0">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=INTEGER},
            </if>
            <if test="number != null">
                #{number,jdbcType=VARCHAR},
            </if>
            <if test="ownedCar != null and ownedCar != 0">
                #{ownedCar,jdbcType=INTEGER},
            </if>
            <if test="licensePlate != null and licensePlate != ''">
                #{licensePlate,jdbcType=VARCHAR},
            </if>
            <if test="provinceId != null and provinceId != 0">
                #{provinceId,jdbcType=INTEGER},
            </if>
            <if test="cityId != null and cityId != 0">
                #{cityId,jdbcType=INTEGER},
            </if>
            <if test="districtId != null and districtId != 0">
                #{districtId,jdbcType=INTEGER},
            </if>
            <if test="channel != null and channel != 0">
                #{channel,jdbcType=INTEGER},
            </if>
            <if test="level != null and level != 0">
                #{level,jdbcType=INTEGER},
            </if>
            <if test="contactTime != null and contactTime != 0">
                #{contactTime,jdbcType=INTEGER},
            </if>
            <if test="relationCustomer != null and relationCustomer != 0">
                #{relationCustomer,jdbcType=INTEGER},
            </if>
            <if test="cusInfoSources != null and cusInfoSources != 0">
                #{cusInfoSources,jdbcType=INTEGER},
            </if>
            <if test="origin != null and origin != 0">
                #{origin,jdbcType=INTEGER},
            </if>
            <if test="intentionFamilyId != null and intentionFamilyId != 0">
                #{intentionFamilyId,jdbcType=INTEGER},
            </if>
            <if test="usage != null and usage != 0">
                #{usage,jdbcType=INTEGER},
            </if>
            <if test="user != null and user != 0">
                #{user,jdbcType=INTEGER},
            </if>
            <if test="userSex != null">
                #{userSex,jdbcType=INTEGER},
            </if>
            <if test="attentionPoint != null and attentionPoint != ''">
                #{attentionPoint,jdbcType=VARCHAR},
            </if>
            <if test="budget != null and budget != 0">
                #{budget,jdbcType=INTEGER},
            </if>
            <if test="expectBuyTime != null">
                #{expectBuyTime,jdbcType=DATE},
            </if>
            <if test="buyType != null and buyType != 0">
                #{buyType,jdbcType=INTEGER},
            </if>
            <if test="attentionCarOne != null and attentionCarOne != 0">
                #{attentionCarOne,jdbcType=INTEGER},
            </if>
            <if test="attentionCarTwo != null and attentionCarTwo != 0">
                #{attentionCarTwo,jdbcType=INTEGER},
            </if>
            <if test="attentionCarThree != null and attentionCarThree != 0">
                #{attentionCarThree,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="employeeId != null">
                #{employeeId,jdbcType=INTEGER},
            </if>
            <if test="storeId != null">
                #{storeId,jdbcType=INTEGER},
            </if>
            <if test="userStatus != null">
                #{userStatus,jdbcType=INTEGER},
            </if>
            <if test="industry != null and industry != ''">
                #{industry,jdbcType=VARCHAR},
            </if>
            <if test="integrity != null">
                #{integrity,jdbcType=DOUBLE},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.unicdata.entity.customer.Customer">
        update customer
        <set>
            <if test="passengerId != null">
                passenger_id = #{passengerId,jdbcType=INTEGER},
            </if>
            <if test="category != null and category != 0">
                category = #{category,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=INTEGER},
            </if>
            <if test="number != null">
                number = #{number,jdbcType=VARCHAR},
            </if>
            <if test="ownedCar != null and ownedCar != 0">
                owned_car = #{ownedCar,jdbcType=INTEGER},
            </if>
            <if test="licensePlate != null and licensePlate != ''">
                license_plate = #{licensePlate,jdbcType=VARCHAR},
            </if>
            <if test="provinceId != null">
                province_id = #{provinceId,jdbcType=INTEGER},
            </if>
            <if test="cityId != null">
                city_id = #{cityId,jdbcType=INTEGER},
            </if>
            <if test="districtId != null">
                district_id = #{districtId,jdbcType=INTEGER},
            </if>
            <if test="channel != null and channel != 0">
                channel = #{channel,jdbcType=INTEGER},
            </if>
            <if test="level != null and level != 0">
                `level` = #{level,jdbcType=INTEGER},
            </if>
            <if test="contactTime != null and contactTime != 0">
                contact_time = #{contactTime,jdbcType=INTEGER},
            </if>
            <if test="relationCustomer != null and relationCustomer != 0">
                relation_customer = #{relationCustomer,jdbcType=INTEGER},
            </if>
            <if test="cusInfoSources != null and cusInfoSources != 0">
                cus_info_sources = #{cusInfoSources,jdbcType=INTEGER},
            </if>
            <if test="origin != null and origin != 0">
                origin = #{origin,jdbcType=INTEGER},
            </if>
            <if test="intentionFamilyId != null and intentionFamilyId != 0">
                intention_family_id = #{intentionFamilyId,jdbcType=INTEGER},
            </if>
            <if test="usage != null and usage != 0">
                `usage` = #{usage,jdbcType=INTEGER},
            </if>
            <if test="user != null and user != 0">
                `user` = #{user,jdbcType=INTEGER},
            </if>
            <if test="userSex != null">
                user_sex = #{userSex,jdbcType=INTEGER},
            </if>
            <if test="attentionPoint != null and attentionPoint != ''">
                attention_point = #{attentionPoint,jdbcType=VARCHAR},
            </if>
            <if test="budget != null and budget != 0">
                budget = #{budget,jdbcType=INTEGER},
            </if>
            <if test="expectBuyTime != null">
                expect_buy_time = #{expectBuyTime,jdbcType=DATE},
            </if>
            <if test="buyType != null and buyType != 0">
                buy_type = #{buyType,jdbcType=INTEGER},
            </if>
            <if test="attentionCarOne != null and attentionCarOne != 0">
                attention_car_one = #{attentionCarOne,jdbcType=INTEGER},
            </if>
            <if test="attentionCarTwo != null">
                attention_car_two = #{attentionCarTwo,jdbcType=INTEGER},
            </if>
            <if test="attentionCarThree != null">
                attention_car_three = #{attentionCarThree,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="employeeId != null">
                employee_id = #{employeeId,jdbcType=INTEGER},
            </if>
            <if test="storeId != null">
                store_id = #{storeId,jdbcType=INTEGER},
            </if>
            <if test="userStatus != null">
                user_status = #{userStatus,jdbcType=INTEGER},
            </if>
            <if test="industry != null and industry != ''">
                industry = #{industry,jdbcType=VARCHAR},
            </if>
            <if test="integrity != null">
                integrity = #{integrity,jdbcType=DOUBLE},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.unicdata.entity.customer.Customer">
    update customer
    set passenger_id = #{passengerId,jdbcType=INTEGER},
      category = #{category,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      number = #{number,jdbcType=VARCHAR},
      owned_car = #{ownedCar,jdbcType=INTEGER},
      license_plate = #{licensePlate,jdbcType=VARCHAR},
      province_id = #{provinceId,jdbcType=INTEGER},
      city_id = #{cityId,jdbcType=INTEGER},
      district_id = #{districtId,jdbcType=INTEGER},
      channel = #{channel,jdbcType=INTEGER},
      `level` = #{level,jdbcType=INTEGER},
      contact_time = #{contactTime,jdbcType=INTEGER},
      relation_customer = #{relationCustomer,jdbcType=INTEGER},
      cus_info_sources = #{cusInfoSources,jdbcType=INTEGER},
      origin = #{origin,jdbcType=INTEGER},
      intention_family_id = #{intentionFamilyId,jdbcType=INTEGER},
      `usage` = #{usage,jdbcType=INTEGER},
      `user` = #{user,jdbcType=INTEGER},
      user_sex = #{userSex,jdbcType=INTEGER},
      attention_point = #{attentionPoint,jdbcType=VARCHAR},
      budget = #{budget,jdbcType=INTEGER},
      expect_buy_time = #{expectBuyTime,jdbcType=DATE},
      buy_type = #{buyType,jdbcType=INTEGER},
      attention_car_one = #{attentionCarOne,jdbcType=INTEGER},
      attention_car_two = #{attentionCarTwo,jdbcType=INTEGER},
      attention_car_three = #{attentionCarThree,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      employee_id = #{employeeId,jdbcType=INTEGER},
      store_id = #{storeId,jdbcType=INTEGER},
      user_status = #{userStatus,jdbcType=INTEGER},
      industry = #{industry,jdbcType=VARCHAR},
      integrity = #{integrity,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!-- 分页获取客户列表 wp -->
    <select id="selectCustomersList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        pf.id id,
        c.name cusname,
        c.level,
        c.intention_family_id,
        pf.cus_id,
        c.phone,
        td.status tdstatus,
        DATE_FORMAT(td.end_time,'%H:%i') end_time,
        DATE_FORMAT(td.create_time,'%H:%i') tdcreat_time,
        c.integrity,
        DATE_FORMAT(pf.create_time,'%H:%i') create_time,
        e.full_name emname,
        pf.status
        FROM employee e
        RIGHT JOIN passenger_flow pf
        ON pf.employee_id=e.id
        LEFT JOIN customer c
        ON c.passenger_id=pf.id
        LEFT JOIN test_drive td
        ON td.cus_id=c.id
        where 1=1
        <if test="storeId != null">
            AND pf.store_id=#{storeId}
        </if>
        <if test="name != null and name !=''">
            AND c.name LIKE CONCAT('%',#{name},'%') OR c.phone LIKE CONCAT('%',#{name},'%')
        </if>
        <if test="createTime !=null">
            AND DATE_FORMAT(pf.create_time, '%Y-%m-%d')=DATE_FORMAT(#{createTime}, '%Y-%m-%d')
        </if>
        GROUP BY pf.id
        ORDER BY pf.create_time desc
    </select>
    <!-- 意向车型(客户列表) wp -->
    <select id="selectAttentionCarFamily" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT
    cf.id,
    cf.brand_id,
    cf.name cfname,
    cb.name cbname
    FROM
    car_family cf
    LEFT JOIN
    car_brand cb
    ON cb.id=cf.brand_id
    WHERE cf.id=#{cfid}
  </select>
    <!--试驾信息状态(客流状态) wp -->
    <select id="testInfo" resultType="java.util.Map" parameterType="java.util.Map">
    SELECT
    td.status tdstatus,
    DATE_FORMAT(td.end_time,'%H:%i') end_time,
    DATE_FORMAT(td.create_time,'%H:%i') tdcreat_time
    FROM
    test_drive td
    WHERE
    td.cus_id=#{cusid}
    ORDER BY td.create_time
    DESC LIMIT 1
  </select>

    <select id="selectOrderCusByParams" parameterType="java.util.Map"
            resultType="java.util.Map">
        SELECT DISTINCT
        c.id,
        o.id as orderId,
        o.order_num,
        c.`name`,
        c.phone,
        CONCAT(cb.`name`,cf.`name`) as carName,
        cg.vin,
        o.`status`,
        o.delivery_date,
        TO_DAYS(NOW()) - TO_DAYS(c.create_time) AS numberDays,
        c.create_time,
        c.level,
        o.car_status,
        o.boutique_status,
        o.insurer_status,
        o.extension_status,
        o.finance_status,
        o.other_status,
        cg.storage_status as storageStatus,
        tf.next_date,
        tf.next_service_item
        FROM
        customer c
        LEFT JOIN `order` o ON o.cus_id = c.id
        LEFT JOIN task_follow_up tf ON tf.customer_id = c.id
        LEFT JOIN car_good_info cg ON cg.id = o.car_id
        LEFT JOIN car_brand cb ON cb.id = cg.brand_id
        LEFT JOIN car_family cf ON cg.family_id = cf.id
        WHERE 1=1
        <if test="storeId != null">
            AND c.store_id = #{storeId,jdbcType=INTEGER}
        </if>
        <if test="category != null">
            AND c.category = #{category,jdbcType=INTEGER}
        </if>
        <if test="employeeId != null">
            AND o.create_id = #{employeeId,jdbcType=INTEGER}
        </if>
        <if test="type != null">
            AND c.type = #{type,jdbcType=INTEGER}
        </if>
        <if test="serviceId != null and serviceId != 0">
            AND tf.next_service_item = #{serviceId}
        </if>
        <choose>
            <when test="dateRange == 1 and nextDate != null">
                AND date_format(tf.next_date, '%Y-%m-%d') = date_format(#{nextDate}, '%Y-%m-%d')
            </when>
            <when test="dateRange > 1 and nextDate != null">
                AND TO_DAYS(tf.next_date)-TO_DAYS(#{nextDate}) &gt;= 0
                AND TO_DAYS(tf.next_date)-TO_DAYS(#{nextDate}) &lt;= #{dateRange}
            </when>
            <otherwise></otherwise>
        </choose>
        GROUP BY c.id
        ORDER BY tf.next_date DESC
    </select>

    <select id="selectCusByStatus" parameterType="com.unicdata.entity.customer.Customer" resultType="java.util.Map">
        SELECT DISTINCT
        c.id,
        c.`name`,
        c.phone,
        c.type,
        CONCAT(cb.`name`,cf.`name`) as carName,
        ac.apply_reason,
        ac.approval_type,
        ac.approval_status,
        ac.id AS approvalId,
        e.full_name,
        TO_DAYS(NOW()) - TO_DAYS(IFNULL(c.create_time,NOW())) AS numberDays,
        c.create_time,
        c.level,
        c.industry
        FROM
        customer c
        LEFT JOIN approval_cus ac ON ac.cus_id = c.id
        LEFT JOIN employee e ON c.employee_id = e.id
        LEFT JOIN task_follow_up tf ON tf.customer_id = c.id
        LEFT JOIN car_family cf ON c.intention_family_id = cf.id
        LEFT JOIN car_brand cb ON cb.id = cf.brand_id
        WHERE 1=1
        <if test="storeId != null">
            AND c.store_id = #{storeId,jdbcType=INTEGER}
        </if>
        <if test="category != null">
            AND c.category = #{category,jdbcType=INTEGER}
        </if>
        <choose>
            <when test="category==1 and employeeId != null">
                AND c.employee_id = #{employeeId,jdbcType=INTEGER}
            </when>
            <otherwise>
                <if test="employeeId != null">
                    AND ac.employee_id = #{employeeId,jdbcType=INTEGER}
                </if>
            </otherwise>
        </choose>
        <if test="type != null">
            AND c.type = #{type,jdbcType=INTEGER}
        </if>
        GROUP BY c.id
        ORDER BY numberDays ASC,tf.next_date DESC
    </select>

    <select id="selectListByParams" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        c.id,
        c.number,
        c.`name` customerName,
        c.phone,
        c.sex,
        c.`level`,
        c.industry,
        cf.name intentionFamilyName,
        date_format(c.create_time, '%Y-%m-%d') createTime,
        CONCAT(cb.name,cf.name) as salesdesc
        FROM
        customer c
        LEFT JOIN car_family cf ON cf.id = c.intention_family_id
        LEFT JOIN car_brand cb ON cb.id = cf.brand_id
        where 1 = 1
        <if test="keyword != null and keyword !=''">
            AND (c.name LIKE CONCAT('%',#{keyword},'%') OR c.phone LIKE CONCAT('%',#{keyword},'%'))
        </if>
        <if test="category != null">
            AND c.category = #{category}
        </if>
        <if test="employeeId != null">
            AND c.employee_id = #{employeeId}
        </if>
        <if test="storeId != null">
            AND c.store_id = #{storeId}
        </if>
        <if test="id != null">
            AND c.id = #{id}
        </if>
        ORDER BY c.id desc
    </select>

    <select id="getCurrentMothCusRecord" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT
        IFNULL(COUNT(1),0)
        FROM
        customer
        WHERE
        DATE_FORMAT(create_time, '%Y-%m') = DATE_FORMAT(NOW(), '%Y-%m')
        <if test="employeeId != null">
            AND employee_id = #{employeeId}
        </if>
        <if test="storeId != null">
            AND store_id = #{storeId}
        </if>
    </select>
    <!-- 查询用户 -->
    <select id="selectCustomer" parameterType="com.unicdata.entity.customer.Customer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from customer
        where 1=1
        <if test="id != null">
            AND id = #{id,jdbcType=INTEGER}
        </if>
        <if test="passengerId != null">
            AND passenger_id = #{passengerId,jdbcType=INTEGER}
        </if>
        <if test="phone != null and phone !=''">
            AND phone = #{phone,jdbcType=VARCHAR}
        </if>
        <if test="employeeId != null">
            AND employee_id = #{employeeId,jdbcType=INTEGER}
        </if>
        LIMIT 1
    </select>
    <select id="calcCustomerIntegrity" parameterType="java.lang.Integer" resultType="java.util.Map">
    select ISNULL(name) a,ISNULL(sex) b,ISNULL(phone) c,
    ISNULL(province_id) d,ISNULL(city_id) e,ISNULL(district_id) f,
    ISNULL(industry) g,ISNULL(owned_car) h,ISNULL(license_plate) i,
    ISNULL(relation_customer) j,ISNULL(type) k,ISNULL(channel) l,
    ISNULL(level) m,ISNULL(intention_family_id) n,ISNULL(`usage`) o,
    ISNULL(attention_point) p,ISNULL(budget) q,ISNULL(expect_buy_time) r,
    ISNULL(buy_type) s,ISNULL(attention_car_one) t,IF(channel = 1,ISNULL(cus_info_sources),-1) u,
	IF(channel in (2,3),ISNULL(origin),-1) v,ISNULL(user) w,ISNULL(user_sex) x,ISNULL(contact_time) y
    FROM customer WHERE id = #{id}
  </select>
    <select id="selectCustomerMap" parameterType="com.unicdata.entity.customer.Customer" resultType="java.util.Map">
        select c.id, c.passenger_id passengerId, c.category, c.type, c.name, c.phone, c.sex, c.number, c.owned_car
        ownedCar,
        c.license_plate licensePlate,c.province_id provinceId, c.city_id cityId, c.district_id districtId, c.channel,
        c.`level`, c.contact_time contactTime, c.relation_customer relationCustomer,c.cus_info_sources
        cusInfoSources,c.origin,
        c.intention_family_id intentionFamilyId, c.`usage`, c.user, c.user_sex userSex, c.attention_point
        attentionPoint,
        budget, expect_buy_time expectBuyTime,buy_type buyType, attention_car_one attentionCarOne,
        attention_car_two attentionCarTwo, attention_car_three attentionCarThree, create_time createTime,
        modify_time modifyTime, c.employee_id employeeId, c.store_id storeId, c.user_status userStatus, industry,
        integrity,CONCAT(cb.`name`,cf.`name`) intentionFamilyName,p.province_name provinceName,
        city.city_name cityName,d.district_name districtName,e.full_name fullName
        from customer c
        LEFT JOIN employee e ON e.id = c.employee_id
        LEFT JOIN car_family cf ON cf.id = c.intention_family_id
        LEFT JOIN car_brand cb ON cb.id = cf.brand_id
        LEFT JOIN province p ON p.id = c.province_id
        LEFT JOIN city ON city.id = c.city_id AND city.province_id = c.province_id
        LEFT JOIN district d ON d.id = c.district_id AND d.city_id = c.city_id
        where 1=1
        <if test="id != null">
            AND c.id = #{id,jdbcType=INTEGER}
        </if>
        <if test="passengerId != null">
            AND c.passenger_id = #{passengerId,jdbcType=INTEGER}
        </if>
        <if test="phone != null and phone !=''">
            AND c.phone = #{phone,jdbcType=VARCHAR}
        </if>
    </select>
</mapper>