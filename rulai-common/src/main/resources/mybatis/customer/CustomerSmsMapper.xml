<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unicdata.dao.customer.CustomerSmsMapper">
  <resultMap id="BaseResultMap" type="com.unicdata.entity.customer.CustomerSms">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="cus_id" jdbcType="INTEGER" property="cusId" />
    <result column="iphone" jdbcType="VARCHAR" property="iphone" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_id" jdbcType="INTEGER" property="createId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, cus_id, iphone, content, create_id, create_date, status
  </sql>
  <select id="selectByExample" parameterType="com.unicdata.entity.customer.CustomerSmsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer_sms
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer_sms
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer_sms
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.unicdata.entity.customer.CustomerSms">
    insert into customer_sms (id, order_id, cus_id, 
      iphone, content, create_id, 
      create_date, status)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{cusId,jdbcType=INTEGER}, 
      #{iphone,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{createId,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.unicdata.entity.customer.CustomerSms">
    insert into customer_sms
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="cusId != null">
        cus_id,
      </if>
      <if test="iphone != null">
        iphone,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="cusId != null">
        #{cusId,jdbcType=INTEGER},
      </if>
      <if test="iphone != null">
        #{iphone,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.unicdata.entity.customer.CustomerSms">
    update customer_sms
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="cusId != null">
        cus_id = #{cusId,jdbcType=INTEGER},
      </if>
      <if test="iphone != null">
        iphone = #{iphone,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unicdata.entity.customer.CustomerSms">
    update customer_sms
    set order_id = #{orderId,jdbcType=INTEGER},
      cus_id = #{cusId,jdbcType=INTEGER},
      iphone = #{iphone,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      create_id = #{createId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>